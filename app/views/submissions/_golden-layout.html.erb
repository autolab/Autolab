<script>
  function registerComponents(myLayout) {
    myLayout.registerComponent("file_tree", function (container, state) {
        container.getElement().html("<%= j render(:partial => 'file_tree') %>");
    });
    myLayout.registerComponent("code_symbol_tree", function (container, state) {
        container.getElement().html("<%= j render(:partial => 'code_symbol_tree', :locals => {ctag_obj: @ctag_obj}) %>");
    });
    myLayout.registerComponent("code_viewer", function (container, state) {
        container.getElement().html("<%= j render(:partial => 'code_viewer') %>");
    });
    myLayout.registerComponent("annotation_pane", function (container, state) {
        container.getElement().html("<%= j render(:partial => 'annotation_pane') %>");
    });
    myLayout.registerComponent("grades", function (container, state) {
      container.getElement().html("<%= j render(:partial => 'grades') %>");
    });
  }

  var content = [
      {
        type: "column",
        width: 20,
        content: [
          {
            type: "component",
            componentName: "file_tree",
            title: "File Outline",
            height: 25,
          },
          {
            type: "component",
            componentName: "code_symbol_tree",
            title: "Symbol Tree",
            height: 25,
          }
        ],
      },
      {
        type: "component",
        componentName: "code_viewer",
        title: "Code",
      },
      {
        type: "column",
        width: 20,
        content: [
          {
            type: "component",
            componentName: "annotation_pane",
            title: "Annotations",
            height: 50,
          },
          {
            type: "component",
            componentName: "grades",
            title: "Grades",
          },
        ],
      },
    ];

  var config = {
    content: [
      {
        type: "row",
        content: content,
      },
    ],
  };

  // golden layout component registrations
  var myLayout,
    savedState = localStorage.getItem( 'savedState' );

  // if savedState exists in localStorage already, used savedState
  if( savedState !== null ) {
      myLayout = new GoldenLayout( JSON.parse( savedState ), "#speedgrader" );
  } else {
      var myLayout = new GoldenLayout(config, "#speedgrader");
  }

  registerComponents(myLayout);
  myLayout.init();

  // figure out how many components are loaded in the layout
  function countComponents (content) {
    var numComponents = 0;
    for (var i = 0; i < content.length; i++) {
      var item = content[i];
      if (item.type === "component") {
        numComponents += 1;
      } else if (item.content) {
        numComponents += countComponents(item.content);
      }
    }
    return numComponents;
  }

  var numComponents = countComponents(content);
  var componentsLoaded = 0;

  // Golden layout event listeners
  myLayout.on('componentCreated', function() {
    // if all components have been loaded, load the annotations js files
    componentsLoaded += 1;
    if (componentsLoaded === numComponents)
      $('body').append("<%= j render(:partial => 'annotations_js') %>");
  });

  myLayout.on( 'stateChanged', function(){
      var state = JSON.stringify( myLayout.toConfig() );
      localStorage.setItem( 'savedState', state );
  });

  // Dynamically resize golden layout on client window resize
  $(window).resize(function () {
    myLayout.updateSize(document.body.clientWidth - $.position.scrollbarWidth(), myLayout.height);
  });

  function resetLayout() {
    if( localStorage.getItem('savedState') !== null ) {
      localStorage.removeItem('savedState');
      window.location.reload();
    }
  }

</script>
