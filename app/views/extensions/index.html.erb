<% @title = "Manage Extensions" %>

<% content_for :javascripts do %>
  <%= render partial: "components/autocomplete", locals: { hiddenCUDField: "#extension_course_user_datum_id" } %>
  <script type="application/javascript">
    jQuery(function() {
      /* set up dates */
      const $dueDate = moment("<%= @assessment.due_at.to_s %>", "YYYY-MM-DD hh:mm:ss ZZ").startOf('day');

      const $extensionDaysField = $('#extension_days');
      const $extensionNewDayField = $('#extension_due_at');
      const $extensionDaysLabel = $('label[for="extension_days"]');
      const $hiddenCUDField = $('#extension_course_user_datum_id');

      /* set up flatpickr (not using initialize_datetimepickers script since
      * it seems to be causing trouble with setting minDate). */
      const $extensionNewDayFlatpickr = flatpickr($extensionNewDayField, {
          altInput: true,
          defaultDate: $dueDate.valueOf(),
          minDate: $dueDate.valueOf()
      });

      /* Enable/disable extension days options */
      const $enableInfiniteExtension = $('#extension_infinite');
      function checkInfiniteExtension () {
        if ($enableInfiniteExtension.is(':checked')) {
          $extensionDaysField.prop('disabled',true);
          $extensionNewDayField.prop('disabled',true);
        } else {
          $extensionDaysField.prop('disabled',false);
          $extensionNewDayField.prop('disabled',false);
        }
      }

      $enableInfiniteExtension.click(() => checkInfiniteExtension());

      /* two-way-bind newDayField with daysField */
      $extensionDaysField.on('change', function() {
        const $newDate = moment($dueDate);
        $newDate.add($extensionDaysField.val(), 'days').startOf('day');
        $extensionNewDayFlatpickr.setDate($newDate.toDate());
      });
      $extensionNewDayField.on('change', function() {
        const $newDate = moment($extensionNewDayField.val()).startOf('day');
        const $extendBy = $newDate.diff($dueDate, 'days');
        $extensionDaysField.val($extendBy);
        $extensionDaysLabel.addClass("active");
      });

      /* Automatically display details of existing extensions */

      const $updateWarning = $('#update-warning');
      // Map CUD to days / infinite details
      const CUDMap = {
          <% @extensions.each do |ext| %>
            "<%= ext.course_user_datum_id %>": {
                days: "<%= ext.days %>",
                infinite: <%= ext.infinite %>
            },
          <% end %>
      };

      $hiddenCUDField.on('change', function() {
        const cud = $hiddenCUDField.val();
        if (cud === '') return;

        const extensionExists = cud in CUDMap;

        let extensionDays = '0';
        let infiniteExtension = false;
        if (extensionExists) {
            const extensionData = CUDMap[cud];
            extensionDays = extensionData.days || '0';
            infiniteExtension = extensionData.infinite;
        }
        /* Populate fields */
        $extensionDaysField.val(extensionDays);
        $enableInfiniteExtension.prop('checked', infiniteExtension);
        $updateWarning.toggle(extensionExists);
        checkInfiniteExtension();
      });

      // Initialization
      checkInfiniteExtension();
      $updateWarning.hide();
    });
  </script>

<% end %>

<div class="row">
  <div class="col s12 m6">
    <p><b>Current Extensions (<%= @extensions.size %>)</b></p>
    <table class="verticalTable">
      <thead>
        <tr>
          <th>Email</th>
          <th colspan=2>Length</th>
        </tr>
      </thead>

      <tbody>
        <% if @extensions.empty? %>
          <tr>
            <td colspan=3>There are currently no extensions for this assessment</td>
          </tr>
        <% else %>
          <% @extensions.each do |ext| %>
            <tr>
              <td><%= ext.course_user_datum.email %></td>
              <td style="padding: 0 5px"><%= ext.infinite? ? "Infinite" : "#{pluralize(ext.days, "day")}" %></td>
              <td><%= link_to '<i class="material-icons">delete</i>'.html_safe, [@course, @assessment, ext],
                              data: { confirm: 'Are you sure you want to delete the extension for user ' + ext.course_user_datum.email + '?' },
                              method: :delete %></td>
            </tr>
          <% end %>
        <% end %>
      </tbody>
    </table>
  </div>

  <div class="col s12 m6">
    <p><b>Create/Update Extension</b></p>
      <%= form_for @new_extension, :as=>"extension", :url=>{:action=>"create"}, builder: FormBuilderWithDateTimeInput do |f| %>
        <div class="input-field">
          <input type="text" size="3" id="student_autocomplete" class="autocomplete" autocomplete="off"/>
          <label for="student_autocomplete">Start typing student name or email</label>
        </div>
        <p>Select a new due date (Currently due at: <span class="moment-date-time"><%= @assessment.due_at.to_s %></span>)</p>
        <%= f.date_select :due_at, greater_than: @assessment.due_at, id: "extension_due_at" %>
        <p>-OR- Specify number of days to extend:</p>
        <%= f.number_field :days, :size=>3, :placeholder=>0, :value=>0, :min=>0, :id=>"extension_days" %>
        <p>-OR- Infinite Extension?</p>
        <%= f.check_box :infinite, id: "extension_infinite" %>
        <%= f.hidden_field(:course_user_datum_id)%>
        <%= f.hidden_field(:assessment_id)%>
        <p id="update-warning" class="red-text">This student has a current extension. Submitting will override it!</p>
        <%= f.submit "Create/Update" , {:class=>"btn primary"} %>
      <% end %>
  </div>

</div>
