Inspecting 147 files
..C..CCWWCC.WCCWCCWCW..CWWC.CCCWWCCCCCCCCCCCC..WCC..WCWCWCCWCCCWCCC....EC.CCCWCCCC.C..W.............................W...........................CCC

Offenses:

app/controllers/admins_controller.rb:10:3: C: Assignment Branch Condition size for email_instructors is too high. [16.16/15]
  def email_instructors
  ^^^
app/controllers/application_controller.rb:9:1: C: Class definition is too long. [234/100]
class ApplicationController < ActionController::Base
^^^^^
app/controllers/application_controller.rb:42:3: C: Replace class var @@global_whitelist with a class instance var.
  @@global_whitelist = {}
  ^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:43:3: C: Assignment Branch Condition size for action_auth_level is too high. [21.28/15]
  def self.action_auth_level(action, level)
  ^^^
app/controllers/application_controller.rb:43:3: C: Cyclomatic complexity for action_auth_level is too high. [8/6]
  def self.action_auth_level(action, level)
  ^^^
app/controllers/application_controller.rb:43:3: C: Perceived complexity for action_auth_level is too high. [8/7]
  def self.action_auth_level(action, level)
  ^^^
app/controllers/application_controller.rb:100:3: C: Assignment Branch Condition size for authenticate_for_action is too high. [16.88/15]
  def authenticate_for_action
  ^^^
app/controllers/application_controller.rb:130:3: C: Assignment Branch Condition size for authorize_user_for_course is too high. [82.03/15]
  def authorize_user_for_course
  ^^^
app/controllers/application_controller.rb:130:3: C: Cyclomatic complexity for authorize_user_for_course is too high. [29/6]
  def authorize_user_for_course
  ^^^
app/controllers/application_controller.rb:130:3: C: Method has too many lines. [49/20]
  def authorize_user_for_course
  ^^^
app/controllers/application_controller.rb:130:3: C: Perceived complexity for authorize_user_for_course is too high. [28/7]
  def authorize_user_for_course
  ^^^
app/controllers/application_controller.rb:204:3: C: Assignment Branch Condition size for set_assessment is too high. [17.12/15]
  def set_assessment
  ^^^
app/controllers/application_controller.rb:204:3: C: Cyclomatic complexity for set_assessment is too high. [7/6]
  def set_assessment
  ^^^
app/controllers/application_controller.rb:220:3: C: Assignment Branch Condition size for set_submission is too high. [31.8/15]
  def set_submission
  ^^^
app/controllers/application_controller.rb:220:3: C: Cyclomatic complexity for set_submission is too high. [14/6]
  def set_submission
  ^^^
app/controllers/application_controller.rb:220:3: C: Perceived complexity for set_submission is too high. [14/7]
  def set_submission
  ^^^
app/controllers/application_controller.rb:243:3: C: Assignment Branch Condition size for run_scheduler is too high. [32.4/15]
  def run_scheduler
  ^^^
app/controllers/application_controller.rb:308:3: C: Assignment Branch Condition size for render_error is too high. [26.42/15]
  def render_error(exception)
  ^^^
app/controllers/application_controller.rb:308:3: C: Cyclomatic complexity for render_error is too high. [9/6]
  def render_error(exception)
  ^^^
app/controllers/application_controller.rb:308:3: C: Perceived complexity for render_error is too high. [9/7]
  def render_error(exception)
  ^^^
app/controllers/assessment/autograde.rb:13:3: C: Assignment Branch Condition size for autograde_done is too high. [40.57/15]
  def autograde_done
  ^^^
app/controllers/assessment/autograde.rb:13:3: C: Cyclomatic complexity for autograde_done is too high. [11/6]
  def autograde_done
  ^^^
app/controllers/assessment/autograde.rb:13:3: C: Method has too many lines. [24/20]
  def autograde_done
  ^^^
app/controllers/assessment/autograde.rb:13:3: C: Perceived complexity for autograde_done is too high. [12/7]
  def autograde_done
  ^^^
app/controllers/assessment/autograde.rb:51:3: C: Assignment Branch Condition size for regrade is too high. [15.81/15]
  def regrade
  ^^^
app/controllers/assessment/autograde.rb:72:3: C: Assignment Branch Condition size for regradeBatch is too high. [28.34/15]
  def regradeBatch
  ^^^
app/controllers/assessment/autograde.rb:72:3: C: Cyclomatic complexity for regradeBatch is too high. [8/6]
  def regradeBatch
  ^^^
app/controllers/assessment/autograde.rb:72:3: C: Method has too many lines. [25/20]
  def regradeBatch
  ^^^
app/controllers/assessment/autograde.rb:72:3: C: Perceived complexity for regradeBatch is too high. [10/7]
  def regradeBatch
  ^^^
app/controllers/assessment/autograde.rb:72:7: C: Use snake_case for method names.
  def regradeBatch
      ^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:96:101: C: Line is too long. [115/100]
    flash[:error] = "Warning: Could not regrade #{failed_jobs} submission(s):<br>" + failed_list if failed_jobs > 0
                                                                                                    ^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:113:3: C: Assignment Branch Condition size for regradeAll is too high. [28.34/15]
  def regradeAll
  ^^^
app/controllers/assessment/autograde.rb:113:3: C: Cyclomatic complexity for regradeAll is too high. [8/6]
  def regradeAll
  ^^^
app/controllers/assessment/autograde.rb:113:3: C: Method has too many lines. [26/20]
  def regradeAll
  ^^^
app/controllers/assessment/autograde.rb:113:3: C: Perceived complexity for regradeAll is too high. [10/7]
  def regradeAll
  ^^^
app/controllers/assessment/autograde.rb:113:7: C: Use snake_case for method names.
  def regradeAll
      ^^^^^^^^^^
app/controllers/assessment/autograde.rb:139:101: C: Line is too long. [115/100]
    flash[:error] = "Warning: Could not regrade #{failed_jobs} submission(s):<br>" + failed_list if failed_jobs > 0
                                                                                                    ^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:154:3: C: Assignment Branch Condition size for autogradeSubmissions is too high. [40.36/15]
  def autogradeSubmissions(course, assessment, submissions)
  ^^^
app/controllers/assessment/autograde.rb:154:3: C: Cyclomatic complexity for autogradeSubmissions is too high. [12/6]
  def autogradeSubmissions(course, assessment, submissions)
  ^^^
app/controllers/assessment/autograde.rb:154:3: C: Method has too many lines. [30/20]
  def autogradeSubmissions(course, assessment, submissions)
  ^^^
app/controllers/assessment/autograde.rb:154:3: C: Perceived complexity for autogradeSubmissions is too high. [14/7]
  def autogradeSubmissions(course, assessment, submissions)
  ^^^
app/controllers/assessment/autograde.rb:154:7: C: Use snake_case for method names.
  def autogradeSubmissions(course, assessment, submissions)
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:156:101: C: Line is too long. [116/100]
    flash[:error] = "Submission could not be autograded due to an error in creation" && return if submissions.blank?
                                                                                                    ^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:182:101: C: Line is too long. [104/100]
      link = "<a href=\"#{url_for(controller: 'jobs', action: 'getjob', id: job)}\">Job ID = #{job}</a>"
                                                                                                    ^^^^
app/controllers/assessment/autograde.rb:193:3: C: Assignment Branch Condition size for tango_upload is too high. [35.86/15]
  def tango_upload(course, assessment, submission, existing_files)
  ^^^
app/controllers/assessment/autograde.rb:193:3: C: Method has too many lines. [29/20]
  def tango_upload(course, assessment, submission, existing_files)
  ^^^
app/controllers/assessment/autograde.rb:272:101: C: Line is too long. [132/100]
      "#{hostname}/courses/#{course.name}/assessments/#{assessment.name}/autograde_done?dave=#{dave}&submission_id=#{submission.id}"
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:289:3: C: Assignment Branch Condition size for tango_add_job is too high. [16.31/15]
  def tango_add_job(course, assessment, upload_file_list, callback_url, job_name, output_file)
  ^^^
app/controllers/assessment/autograde.rb:289:20: C: Avoid parameter lists longer than 5 parameters.
  def tango_add_job(course, assessment, upload_file_list, callback_url, job_name, output_file)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:312:3: C: Assignment Branch Condition size for tango_poll is too high. [18.87/15]
  def tango_poll(course, assessment, submissions, output_file)
  ^^^
app/controllers/assessment/autograde.rb:312:3: C: Method has too many lines. [28/20]
  def tango_poll(course, assessment, submissions, output_file)
  ^^^
app/controllers/assessment/autograde.rb:317:101: C: Line is too long. [104/100]
          response = TangoClient.poll("#{course.name}-#{assessment.name}", "#{URI.encode(output_file)}")
                                                                                                    ^^^^
app/controllers/assessment/autograde.rb:355:3: C: Assignment Branch Condition size for sendJob is too high. [33/15]
  def sendJob(course, assessment, submissions, cud)
  ^^^
app/controllers/assessment/autograde.rb:355:3: C: Cyclomatic complexity for sendJob is too high. [8/6]
  def sendJob(course, assessment, submissions, cud)
  ^^^
app/controllers/assessment/autograde.rb:355:3: C: Method has too many lines. [24/20]
  def sendJob(course, assessment, submissions, cud)
  ^^^
app/controllers/assessment/autograde.rb:355:3: C: Perceived complexity for sendJob is too high. [8/7]
  def sendJob(course, assessment, submissions, cud)
  ^^^
app/controllers/assessment/autograde.rb:355:7: C: Use snake_case for method names.
  def sendJob(course, assessment, submissions, cud)
      ^^^^^^^
app/controllers/assessment/autograde.rb:398:7: C: Use snake_case for method names.
  def autogradeInputFiles(ass_dir, assessment, submission)
      ^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:424:7: C: Use snake_case for method names.
  def autogradeDone(submissions, feedback)
      ^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:447:3: C: Assignment Branch Condition size for saveAutograde is too high. [67.74/15]
  def saveAutograde(submissions, feedback)
  ^^^
app/controllers/assessment/autograde.rb:447:3: C: Cyclomatic complexity for saveAutograde is too high. [9/6]
  def saveAutograde(submissions, feedback)
  ^^^
app/controllers/assessment/autograde.rb:447:3: C: Method has too many lines. [50/20]
  def saveAutograde(submissions, feedback)
  ^^^
app/controllers/assessment/autograde.rb:447:3: C: Perceived complexity for saveAutograde is too high. [10/7]
  def saveAutograde(submissions, feedback)
  ^^^
app/controllers/assessment/autograde.rb:447:7: C: Use snake_case for method names.
  def saveAutograde(submissions, feedback)
      ^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:507:101: C: Line is too long. [112/100]
      logger.add(Logger::INFO) { "#{submission.course_user_datum.email}, #{submission.version}, #{autoresult}" }
                                                                                                    ^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:516:7: C: Use snake_case for method names.
  def parseAutoresult(autoresult, _isOfficial)
      ^^^^^^^^^^^^^^^
app/controllers/assessment/autograde.rb:523:3: C: Assignment Branch Condition size for extend_config_module is too high. [43.7/15]
  def extend_config_module(assessment, submission, cud)
  ^^^
app/controllers/assessment/autograde.rb:523:3: C: Cyclomatic complexity for extend_config_module is too high. [11/6]
  def extend_config_module(assessment, submission, cud)
  ^^^
app/controllers/assessment/autograde.rb:523:3: C: Method has too many lines. [46/20]
  def extend_config_module(assessment, submission, cud)
  ^^^
app/controllers/assessment/autograde.rb:523:3: C: Perceived complexity for extend_config_module is too high. [12/7]
  def extend_config_module(assessment, submission, cud)
  ^^^
app/controllers/assessment/grading.rb:4:1: C: Missing top-level module documentation comment.
module AssessmentGrading
^^^^^^
app/controllers/assessment/grading.rb:6:7: C: Use snake_case for method names.
  def bulkExport
      ^^^^^^^^^^
app/controllers/assessment/grading.rb:17:3: C: Assignment Branch Condition size for bulkGrade is too high. [25.96/15]
  def bulkGrade
  ^^^
app/controllers/assessment/grading.rb:17:3: C: Cyclomatic complexity for bulkGrade is too high. [10/6]
  def bulkGrade
  ^^^
app/controllers/assessment/grading.rb:17:3: C: Method has too many lines. [22/20]
  def bulkGrade
  ^^^
app/controllers/assessment/grading.rb:17:3: C: Perceived complexity for bulkGrade is too high. [12/7]
  def bulkGrade
  ^^^
app/controllers/assessment/grading.rb:17:7: C: Use snake_case for method names.
  def bulkGrade
      ^^^^^^^^^
app/controllers/assessment/grading.rb:21:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if params[:upload]
    ^^
app/controllers/assessment/grading.rb:50:3: C: Assignment Branch Condition size for bulkGrade_complete is too high. [29.58/15]
  def bulkGrade_complete
  ^^^
app/controllers/assessment/grading.rb:50:3: C: Cyclomatic complexity for bulkGrade_complete is too high. [12/6]
  def bulkGrade_complete
  ^^^
app/controllers/assessment/grading.rb:50:3: C: Perceived complexity for bulkGrade_complete is too high. [13/7]
  def bulkGrade_complete
  ^^^
app/controllers/assessment/grading.rb:50:7: C: Use snake_case for method names.
  def bulkGrade_complete
      ^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:71:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless save_entries @entries, data_type
    ^^^^^^
app/controllers/assessment/grading.rb:88:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when Hash
      ^^^^
app/controllers/assessment/grading.rb:96:3: C: Assignment Branch Condition size for save_entries is too high. [40.63/15]
  def save_entries(entries, data_type)
  ^^^
app/controllers/assessment/grading.rb:96:3: C: Cyclomatic complexity for save_entries is too high. [8/6]
  def save_entries(entries, data_type)
  ^^^
app/controllers/assessment/grading.rb:96:3: C: Method has too many lines. [43/20]
  def save_entries(entries, data_type)
  ^^^
app/controllers/assessment/grading.rb:111:22: W: Assignment in condition - you probably meant to use [33m==[0m.
          unless sub = aud.latest_submission
                     ^
app/controllers/assessment/grading.rb:155:89: W: Ambiguous block operator. Parenthesize the method arguments if it's surely a block operator, or add a whitespace to the right of the [33m&[0m if it should be a binary AND.
    emails = Set.new(CourseUserDatum.joins(:user).where(course: @assessment.course).map &:email)
                                                                                        ^
app/controllers/assessment/grading.rb:172:3: C: Assignment Branch Condition size for parse_csv_row is too high. [33.62/15]
  def parse_csv_row(row, kind, problems, emails)
  ^^^
app/controllers/assessment/grading.rb:172:3: C: Cyclomatic complexity for parse_csv_row is too high. [10/6]
  def parse_csv_row(row, kind, problems, emails)
  ^^^
app/controllers/assessment/grading.rb:172:3: C: Method has too many lines. [36/20]
  def parse_csv_row(row, kind, problems, emails)
  ^^^
app/controllers/assessment/grading.rb:172:3: C: Perceived complexity for parse_csv_row is too high. [12/7]
  def parse_csv_row(row, kind, problems, emails)
  ^^^
app/controllers/assessment/grading.rb:190:5: W: [33mend[0m at 190, 4 is not aligned with [33mif[0m at 184, 24
    end
    ^^^
app/controllers/assessment/grading.rb:199:11: C: Avoid using [33mrescue[0m in its modifier form.
          Float(datum) rescue({ error: datum })
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:219:5: W: [33mend[0m at 219, 4 is not aligned with [33mif[0m at 213, 29
    end
    ^^^
app/controllers/assessment/grading.rb:226:3: C: Assignment Branch Condition size for quickSetScore is too high. [27.66/15]
  def quickSetScore
  ^^^
app/controllers/assessment/grading.rb:226:7: C: Use snake_case for method names.
  def quickSetScore
      ^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:255:3: C: Assignment Branch Condition size for quickSetScoreDetails is too high. [29.55/15]
  def quickSetScoreDetails
  ^^^
app/controllers/assessment/grading.rb:255:7: C: Use snake_case for method names.
  def quickSetScoreDetails
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:291:15: C: Favor the ternary operator (?:) over if/then/else/end constructs.
    grader = (if score then score.grader else nil end)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:291:42: C: Redundant empty [33melse[0m-clause.
    grader = (if score then score.grader else nil end)
                                         ^^^^
app/controllers/assessment/grading.rb:299:7: C: Use snake_case for method names.
  def viewGradesheet
      ^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:303:7: C: Use snake_case for method names.
  def quickGetTotal
      ^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:312:3: C: Assignment Branch Condition size for statistics is too high. [41.05/15]
  def statistics
  ^^^
app/controllers/assessment/grading.rb:312:3: C: Method has too many lines. [21/20]
  def statistics
  ^^^
app/controllers/assessment/grading.rb:355:7: W: The use of [33meval[0m is a serious security risk.
      eval("extend(Course#{course.camelize})")
      ^^^^
app/controllers/assessment/grading.rb:356:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception
    ^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:359:69: C: Use [33m&&[0m instead of [33mand[0m.
        "admin/reload'>here</a> to reload the file, and try again") and
                                                                    ^^^
app/controllers/assessment/grading.rb:365:3: C: Assignment Branch Condition size for stats_for_grouping is too high. [37.39/15]
  def stats_for_grouping(grouping)
  ^^^
app/controllers/assessment/grading.rb:365:3: C: Method has too many lines. [25/20]
  def stats_for_grouping(grouping)
  ^^^
app/controllers/assessment/grading.rb:367:5: W: Useless assignment to variable - [33mproblem_id_to_name[0m.
    problem_id_to_name = @assessment.problem_id_to_name
    ^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:407:3: C: Assignment Branch Condition size for stats_for_grader is too high. [52.33/15]
  def stats_for_grader(submissions)
  ^^^
app/controllers/assessment/grading.rb:407:3: C: Method has too many lines. [48/20]
  def stats_for_grader(submissions)
  ^^^
app/controllers/assessment/grading.rb:409:5: W: Useless assignment to variable - [33mproblem_id_to_name[0m.
    problem_id_to_name = @assessment.problem_id_to_name
    ^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:467:3: C: Assignment Branch Condition size for load_gradesheet_data is too high. [17.12/15]
  def load_gradesheet_data
  ^^^
app/controllers/assessment/grading.rb:472:9: C: Avoid multi-line ?: (the ternary operator); use [33mif[0m/[33munless[0m instead.
    o = params[:section] ? {
        ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessment/grading.rb:480:47: W: Do not use prefix [33m_[0m for a variable that is used.
    cache = AssociationCache.new(@course) do |_|
                                              ^
app/controllers/assessment/handin.rb:21:3: C: Assignment Branch Condition size for handin is too high. [21.12/15]
  def handin
  ^^^
app/controllers/assessment/handin.rb:21:3: C: Cyclomatic complexity for handin is too high. [10/6]
  def handin
  ^^^
app/controllers/assessment/handin.rb:21:3: C: Perceived complexity for handin is too high. [10/7]
  def handin
  ^^^
app/controllers/assessment/handin.rb:49:3: C: Assignment Branch Condition size for local_submit is too high. [94.24/15]
  def local_submit
  ^^^
app/controllers/assessment/handin.rb:49:3: C: Cyclomatic complexity for local_submit is too high. [33/6]
  def local_submit
  ^^^
app/controllers/assessment/handin.rb:49:3: C: Method has too many lines. [73/20]
  def local_submit
  ^^^
app/controllers/assessment/handin.rb:49:3: C: Perceived complexity for local_submit is too high. [36/7]
  def local_submit
  ^^^
app/controllers/assessment/handin.rb:154:3: C: Assignment Branch Condition size for log_submit is too high. [82.18/15]
  def log_submit
  ^^^
app/controllers/assessment/handin.rb:154:3: C: Cyclomatic complexity for log_submit is too high. [17/6]
  def log_submit
  ^^^
app/controllers/assessment/handin.rb:154:3: C: Method has too many lines. [51/20]
  def log_submit
  ^^^
app/controllers/assessment/handin.rb:154:3: C: Perceived complexity for log_submit is too high. [19/7]
  def log_submit
  ^^^
app/controllers/assessment/handin.rb:184:5: W: The use of [33meval[0m is a serious security risk.
    eval("extend #{mod_name.camelcase}")
    ^^^^
app/controllers/assessment/handin.rb:235:3: C: Assignment Branch Condition size for validateHandin is too high. [37.34/15]
  def validateHandin
  ^^^
app/controllers/assessment/handin.rb:235:3: C: Method has too many lines. [22/20]
  def validateHandin
  ^^^
app/controllers/assessment/handin.rb:235:7: C: Use snake_case for method names.
  def validateHandin
      ^^^^^^^^^^^^^^
app/controllers/assessment/handin.rb:273:3: C: Assignment Branch Condition size for validate_for_groups is too high. [20.15/15]
  def validate_for_groups
  ^^^
app/controllers/assessment/handin.rb:273:3: C: Cyclomatic complexity for validate_for_groups is too high. [7/6]
  def validate_for_groups
  ^^^
app/controllers/assessment/handin.rb:302:3: C: Assignment Branch Condition size for saveHandin is too high. [27.73/15]
  def saveHandin(sub)
  ^^^
app/controllers/assessment/handin.rb:302:3: C: Method has too many lines. [24/20]
  def saveHandin(sub)
  ^^^
app/controllers/assessment/handin.rb:302:7: C: Use snake_case for method names.
  def saveHandin(sub)
      ^^^^^^^^^^
app/controllers/assessment/handin.rb:331:3: C: Assignment Branch Condition size for set_handin is too high. [17.49/15]
  def set_handin
  ^^^
app/controllers/assessment/handout.rb:13:3: C: Assignment Branch Condition size for handout is too high. [16.61/15]
  def handout
  ^^^
app/controllers/assessment/SVN.rb:1:1: C: Use snake_case for source file names.
##
^
app/controllers/assessment/SVN.rb:25:3: C: Assignment Branch Condition size for import_svn is too high. [18.68/15]
  def import_svn
  ^^^
app/controllers/assessment/SVN.rb:53:3: C: Assignment Branch Condition size for svn_save_handin is too high. [27.82/15]
  def svn_save_handin
  ^^^
app/controllers/assessment/SVN.rb:53:3: C: Method has too many lines. [25/20]
  def svn_save_handin
  ^^^
app/controllers/assessments_controller.rb:6:1: C: Class definition is too long. [1154/100]
class AssessmentsController < ApplicationController
^^^^^
app/controllers/assessments_controller.rb:6:1: C: Missing top-level class documentation comment.
class AssessmentsController < ApplicationController
^^^^^
app/controllers/assessments_controller.rb:67:101: C: Line is too long. [166/100]
    @announcements = Announcement.where("start_date<? and end_date>? and (course_id=? or system) and !persistent", Time.now, Time.now, @course.id).order("start_date")
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:68:101: C: Line is too long. [103/100]
    @attachments = (@cud.instructor?) ? @course.attachments : @course.attachments.where(released: true)
                                                                                                    ^^^
app/controllers/assessments_controller.rb:79:5: C: Use snake_case for variable names.
    @moduleDir = File.join(Rails.root, "lib", "modules")
    ^^^^^^^^^^
app/controllers/assessments_controller.rb:83:9: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        if filename =~ /.*\.rb/
        ^^
app/controllers/assessments_controller.rb:87:5: W: Do not suppress exceptions.
    rescue Exception
    ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:87:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception
    ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:92:3: C: Assignment Branch Condition size for installQuiz is too high. [57.2/15]
  def installQuiz
  ^^^
app/controllers/assessments_controller.rb:92:3: C: Cyclomatic complexity for installQuiz is too high. [7/6]
  def installQuiz
  ^^^
app/controllers/assessments_controller.rb:92:3: C: Method has too many lines. [39/20]
  def installQuiz
  ^^^
app/controllers/assessments_controller.rb:92:3: C: Perceived complexity for installQuiz is too high. [8/7]
  def installQuiz
  ^^^
app/controllers/assessments_controller.rb:92:7: C: Use snake_case for method names.
  def installQuiz
      ^^^^^^^^^^^
app/controllers/assessments_controller.rb:98:9: C: Use snake_case for variable names.
        quizJSON = params[:quiz]
        ^^^^^^^^
app/controllers/assessments_controller.rb:99:9: C: Use snake_case for variable names.
        quizDisplayName = params[:quizName]
        ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:100:9: C: Use snake_case for variable names.
        quizName = quizDisplayName.downcase.gsub(/[^a-z0-9]/, "")
        ^^^^^^^^
app/controllers/assessments_controller.rb:120:101: C: Line is too long. [103/100]
        @assessment.max_submissions = params.include?(:max_submissions) ? params[:max_submissions] : -1
                                                                                                    ^^^
app/controllers/assessments_controller.rb:123:9: C: Use snake_case for variable names.
        quizData = JSON.parse(quizJSON)
        ^^^^^^^^
app/controllers/assessments_controller.rb:131:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:141:3: C: Assignment Branch Condition size for takeQuiz is too high. [16.03/15]
  def takeQuiz
  ^^^
app/controllers/assessments_controller.rb:141:7: C: Use snake_case for method names.
  def takeQuiz
      ^^^^^^^^
app/controllers/assessments_controller.rb:147:5: C: Use snake_case for variable names.
    @quizData = JSON.parse(@assessment.quizData)
    ^^^^^^^^^
app/controllers/assessments_controller.rb:148:5: C: Use snake_case for variable names.
    @submitPath = submitQuiz_course_assessment_path(@course, @assessment)
    ^^^^^^^^^^^
app/controllers/assessments_controller.rb:153:3: C: Assignment Branch Condition size for submitQuiz is too high. [36.24/15]
  def submitQuiz
  ^^^
app/controllers/assessments_controller.rb:153:3: C: Cyclomatic complexity for submitQuiz is too high. [7/6]
  def submitQuiz
  ^^^
app/controllers/assessments_controller.rb:153:3: C: Method has too many lines. [27/20]
  def submitQuiz
  ^^^
app/controllers/assessments_controller.rb:153:7: C: Use snake_case for method names.
  def submitQuiz
      ^^^^^^^^^^
app/controllers/assessments_controller.rb:159:5: C: Use snake_case for variable names.
    @quizData = JSON.parse(@assessment.quizData)
    ^^^^^^^^^
app/controllers/assessments_controller.rb:163:7: C: Use snake_case for variable names.
      actualAnswer = @quizData[i]["answer"]
      ^^^^^^^^^^^^
app/controllers/assessments_controller.rb:164:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if (answer.to_i == actualAnswer)
      ^^
app/controllers/assessments_controller.rb:171:5: C: Use snake_case for variable names.
    quizScore = Score.new(score: score,
    ^^^^^^^^^
app/controllers/assessments_controller.rb:177:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless quizScore.save
    ^^^^^^
app/controllers/assessments_controller.rb:188:7: C: Use snake_case for method names.
  def installAssessment
      ^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:189:5: C: Use snake_case for variable names.
    @assignDir = File.join(Rails.root, "courses", @course.name)
    ^^^^^^^^^^
app/controllers/assessments_controller.rb:190:5: C: Use snake_case for variable names.
    @availableAssessments = []
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:195:11: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          if filename =~ /[^a-z0-9]/
          ^^
app/controllers/assessments_controller.rb:201:11: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          unless assessment
          ^^^^^^
app/controllers/assessments_controller.rb:206:7: C: Use snake_case for variable names.
      @availableAssessments = @availableAssessments.sort
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:207:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => error
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:213:3: C: Assignment Branch Condition size for importAsmtFromTar is too high. [71.11/15]
  def importAsmtFromTar
  ^^^
app/controllers/assessments_controller.rb:213:3: C: Cyclomatic complexity for importAsmtFromTar is too high. [15/6]
  def importAsmtFromTar
  ^^^
app/controllers/assessments_controller.rb:213:3: C: Method has too many lines. [54/20]
  def importAsmtFromTar
  ^^^
app/controllers/assessments_controller.rb:213:3: C: Perceived complexity for importAsmtFromTar is too high. [16/7]
  def importAsmtFromTar
  ^^^
app/controllers/assessments_controller.rb:213:7: C: Use snake_case for method names.
  def importAsmtFromTar
      ^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:216:5: C: Use snake_case for variable names.
    tarFile = params["tarFile"]
    ^^^^^^^
app/controllers/assessments_controller.rb:222:7: C: Use snake_case for variable names.
      tarFile = File.new(tarFile.open, "rb")
      ^^^^^^^
app/controllers/assessments_controller.rb:231:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:237:101: C: Line is too long. [116/100]
      flash[:error] = "An assessment with the same name already exists for the course. Please use a different name."
                                                                                                    ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:264:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:276:3: C: Assignment Branch Condition size for importAssessment is too high. [30.43/15]
  def importAssessment
  ^^^
app/controllers/assessments_controller.rb:276:3: C: Cyclomatic complexity for importAssessment is too high. [8/6]
  def importAssessment
  ^^^
app/controllers/assessments_controller.rb:276:3: C: Method has too many lines. [21/20]
  def importAssessment
  ^^^
app/controllers/assessments_controller.rb:276:3: C: Perceived complexity for importAssessment is too high. [10/7]
  def importAssessment
  ^^^
app/controllers/assessments_controller.rb:276:7: C: Use snake_case for method names.
  def importAssessment
      ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:310:3: C: Assignment Branch Condition size for create is too high. [96.62/15]
  def create
  ^^^
app/controllers/assessments_controller.rb:310:3: C: Cyclomatic complexity for create is too high. [21/6]
  def create
  ^^^
app/controllers/assessments_controller.rb:310:3: C: Method has too many lines. [65/20]
  def create
  ^^^
app/controllers/assessments_controller.rb:310:3: C: Perceived complexity for create is too high. [21/7]
  def create
  ^^^
app/controllers/assessments_controller.rb:315:7: C: Use snake_case for variable names.
      assName = @assessment.display_name.downcase.gsub(/[^a-z0-9]/, "")
      ^^^^^^^
app/controllers/assessments_controller.rb:329:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:334:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e2
      ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:356:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:356:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessments_controller.rb:365:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if !File.exist?(f) && !put_props
      ^^
app/controllers/assessments_controller.rb:368:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:377:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:389:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:390:9: C: Do not write to stdout. Use Rails' logger if you want to log.
        puts "\n\n ERROR: \n #{e} \n #{e.backtrace} \n"
        ^^^^
app/controllers/assessments_controller.rb:400:3: C: Assignment Branch Condition size for assessmentInitialize is too high. [16.4/15]
  def assessmentInitialize(assignName)
  ^^^
app/controllers/assessments_controller.rb:400:7: C: Use snake_case for method names.
  def assessmentInitialize(assignName)
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:402:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless @assessment
    ^^^^^^
app/controllers/assessments_controller.rb:428:7: C: Use snake_case for method names.
  def installProblems
      ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:429:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless @cud.instructor?
    ^^^^^^
app/controllers/assessments_controller.rb:433:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if Problem.where(assessment_id: @assessment.id).count == 0
    ^^
app/controllers/assessments_controller.rb:434:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in @problems do
      ^^^
app/controllers/assessments_controller.rb:462:3: C: Assignment Branch Condition size for grade is too high. [19.95/15]
  def grade
  ^^^
app/controllers/assessments_controller.rb:467:7: C: Use snake_case for variable names.
      subFile = File.join(Rails.root, "courses",
      ^^^^^^^
app/controllers/assessments_controller.rb:471:7: C: Use snake_case for variable names.
      @submissionData = File.read(subFile)
      ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:473:7: C: Use snake_case for variable names.
      @submissionData = "Could not read #{subFile}"
      ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:478:7: C: Use snake_case for method names.
  def getAssessmentVariable(key)
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:489:3: C: Assignment Branch Condition size for export is too high. [49.59/15]
  def export
  ^^^
app/controllers/assessments_controller.rb:489:3: C: Method has too many lines. [33/20]
  def export
  ^^^
app/controllers/assessments_controller.rb:498:7: C: Use snake_case for variable names.
      tarStream = StringIO.new("")
      ^^^^^^^^^
app/controllers/assessments_controller.rb:503:36: W: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the [33m/[0m if it should be a division.
          relative_path = file.sub /^#{Regexp.escape base_path}\/?/, ""
                                   ^
app/controllers/assessments_controller.rb:507:101: C: Line is too long. [101/100]
          elsif !relative_path.starts_with? File.join(@assessment.name, @assessment.handin_directory)
                                                                                                    ^
app/controllers/assessments_controller.rb:516:101: C: Line is too long. [160/100]
      send_data tarStream.string.force_encoding("binary"), filename: "#{@assessment.name}_#{Time.now.strftime('%Y%m%d')}.tar", content_type: "application/x-tar"
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:517:31: W: Useless assignment to variable - [33me[0m.
    rescue SystemCallError => e
                              ^
app/controllers/assessments_controller.rb:520:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:531:3: C: Assignment Branch Condition size for import is too high. [66.59/15]
  def import
  ^^^
app/controllers/assessments_controller.rb:531:3: C: Cyclomatic complexity for import is too high. [14/6]
  def import
  ^^^
app/controllers/assessments_controller.rb:531:3: C: Method has too many lines. [52/20]
  def import
  ^^^
app/controllers/assessments_controller.rb:531:3: C: Perceived complexity for import is too high. [16/7]
  def import
  ^^^
app/controllers/assessments_controller.rb:533:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if !props || !props["general"]
    ^^
app/controllers/assessments_controller.rb:540:5: C: Use snake_case for variable names.
    catName = general["category"] || @assessment.category_name
    ^^^^^^^
app/controllers/assessments_controller.rb:542:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if !catName || catName.blank?
    ^^
app/controllers/assessments_controller.rb:543:7: C: Use snake_case for variable names.
      catName = "Default"
      ^^^^^^^
app/controllers/assessments_controller.rb:555:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in problems do
      ^^^
app/controllers/assessments_controller.rb:584:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if !scoreboard.nil? && !scoreboard.empty?
    ^^
app/controllers/assessments_controller.rb:601:5: C: Prefer [33meach[0m over [33mfor[0m.
    for submission in @assessment.submissions do
    ^^^
app/controllers/assessments_controller.rb:605:5: C: Prefer [33meach[0m over [33mfor[0m.
    for attachment in @assessment.attachments do
    ^^^
app/controllers/assessments_controller.rb:616:3: C: Assignment Branch Condition size for show is too high. [51.89/15]
  def show
  ^^^
app/controllers/assessments_controller.rb:616:3: C: Cyclomatic complexity for show is too high. [7/6]
  def show
  ^^^
app/controllers/assessments_controller.rb:616:3: C: Method has too many lines. [44/20]
  def show
  ^^^
app/controllers/assessments_controller.rb:616:3: C: Perceived complexity for show is too high. [8/7]
  def show
  ^^^
app/controllers/assessments_controller.rb:631:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if params[:cud_id]
    ^^
app/controllers/assessments_controller.rb:635:5: C: Use snake_case for variable names.
    @startTime = Time.now
    ^^^^^^^^^^
app/controllers/assessments_controller.rb:637:7: C: Use snake_case for variable names.
      @effectiveCud = @course.course_user_data.find(params[:cud_id])
      ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:639:7: C: Use snake_case for variable names.
      @effectiveCud = @cud
      ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:641:101: C: Line is too long. [110/100]
    @submissions = @assessment.submissions.where(course_user_datum_id: @effectiveCud.id).order("version DESC")
                                                                                                    ^^^^^^^^^^
app/controllers/assessments_controller.rb:657:5: C: Prefer [33meach[0m over [33mfor[0m.
    for result in results do
    ^^^
app/controllers/assessments_controller.rb:658:7: C: Use snake_case for variable names.
      subId = result["submission_id"].to_i
      ^^^^^
app/controllers/assessments_controller.rb:659:7: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      unless @scores.key?(subId)
      ^^^^^^
app/controllers/assessments_controller.rb:676:3: C: Assignment Branch Condition size for history is too high. [47.1/15]
  def history
  ^^^
app/controllers/assessments_controller.rb:676:3: C: Cyclomatic complexity for history is too high. [8/6]
  def history
  ^^^
app/controllers/assessments_controller.rb:676:3: C: Method has too many lines. [39/20]
  def history
  ^^^
app/controllers/assessments_controller.rb:676:3: C: Perceived complexity for history is too high. [9/7]
  def history
  ^^^
app/controllers/assessments_controller.rb:678:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if params[:cud_id]
    ^^
app/controllers/assessments_controller.rb:682:5: C: Use snake_case for variable names.
    @startTime = Time.now
    ^^^^^^^^^^
app/controllers/assessments_controller.rb:684:7: C: Use snake_case for variable names.
      @effectiveCud = @course.course_user_data.find(params[:cud_id])
      ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:686:7: C: Use snake_case for variable names.
      @effectiveCud = @cud
      ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:688:101: C: Line is too long. [110/100]
    @submissions = @assessment.submissions.where(course_user_datum_id: @effectiveCud.id).order("version DESC")
                                                                                                    ^^^^^^^^^^
app/controllers/assessments_controller.rb:704:5: C: Prefer [33meach[0m over [33mfor[0m.
    for result in results do
    ^^^
app/controllers/assessments_controller.rb:705:7: C: Use snake_case for variable names.
      subId = result["submission_id"].to_i
      ^^^^^
app/controllers/assessments_controller.rb:706:7: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      unless @scores.key?(subId)
      ^^^^^^
app/controllers/assessments_controller.rb:721:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if params[:partial]
    ^^
app/controllers/assessments_controller.rb:728:7: C: Use snake_case for method names.
  def viewFeedback
      ^^^^^^^^^^^^
app/controllers/assessments_controller.rb:731:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless @score
    ^^^^^^
app/controllers/assessments_controller.rb:735:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if Archive.archive? @submission.handin_file_path
    ^^
app/controllers/assessments_controller.rb:743:3: W: Do not suppress exceptions.
  rescue Exception => @error
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:743:3: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
  rescue Exception => @error
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:773:7: C: Use snake_case for method names.
  def releaseAllGrades
      ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:778:43: C: Favor [33mformat[0m over [33mString#%[0m.
      flash[:success] = "%d %s released." % [num_released, (num_released > 1 ? "grades were" : "grade was")]
                                          ^
app/controllers/assessments_controller.rb:778:101: C: Line is too long. [108/100]
      flash[:success] = "%d %s released." % [num_released, (num_released > 1 ? "grades were" : "grade was")]
                                                                                                    ^^^^^^^^
app/controllers/assessments_controller.rb:786:3: C: Assignment Branch Condition size for releaseSectionGrades is too high. [22.83/15]
  def releaseSectionGrades
  ^^^
app/controllers/assessments_controller.rb:786:3: C: Cyclomatic complexity for releaseSectionGrades is too high. [7/6]
  def releaseSectionGrades
  ^^^
app/controllers/assessments_controller.rb:786:3: C: Perceived complexity for releaseSectionGrades is too high. [8/7]
  def releaseSectionGrades
  ^^^
app/controllers/assessments_controller.rb:786:7: C: Use snake_case for method names.
  def releaseSectionGrades
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:788:101: C: Line is too long. [110/100]
      flash[:error] = "You haven't been assigned to a lecture and/or section. Please contact your instructor."
                                                                                                    ^^^^^^^^^^
app/controllers/assessments_controller.rb:793:101: C: Line is too long. [101/100]
    num_released = releaseMatchingGrades { |submission, _| @cud.CA_of? submission.course_user_datum }
                                                                                                    ^
app/controllers/assessments_controller.rb:796:43: C: Favor [33mformat[0m over [33mString#%[0m.
      flash[:success] = "%d %s released." % [num_released, (num_released > 1 ? "grades were" : "grade was")]
                                          ^
app/controllers/assessments_controller.rb:796:101: C: Line is too long. [108/100]
      flash[:success] = "%d %s released." % [num_released, (num_released > 1 ? "grades were" : "grade was")]
                                                                                                    ^^^^^^^^
app/controllers/assessments_controller.rb:799:101: C: Line is too long. [102/100]
                      "Either they were all already released or you might be assigned to a lecture " \
                                                                                                    ^^
app/controllers/assessments_controller.rb:806:7: C: Use snake_case for method names.
  def withdrawAllGrades
      ^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:820:3: C: Assignment Branch Condition size for writeup is too high. [17.72/15]
  def writeup
  ^^^
app/controllers/assessments_controller.rb:826:5: C: Do not write to stdout. Use Rails' logger if you want to log.
    print "\n\n\n"
    ^^^^^
app/controllers/assessments_controller.rb:827:5: C: Do not write to stdout. Use Rails' logger if you want to log.
    print @assessment.writeup_path
    ^^^^^
app/controllers/assessments_controller.rb:849:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless name.blank?
    ^^^^^^
app/controllers/assessments_controller.rb:860:3: C: Assignment Branch Condition size for adminAutograde is too high. [22.56/15]
  def adminAutograde
  ^^^
app/controllers/assessments_controller.rb:860:7: C: Use snake_case for method names.
  def adminAutograde
      ^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:887:3: C: Assignment Branch Condition size for adminScoreboard is too high. [31/15]
  def adminScoreboard
  ^^^
app/controllers/assessments_controller.rb:887:3: C: Cyclomatic complexity for adminScoreboard is too high. [7/6]
  def adminScoreboard
  ^^^
app/controllers/assessments_controller.rb:887:3: C: Method has too many lines. [24/20]
  def adminScoreboard
  ^^^
app/controllers/assessments_controller.rb:887:3: C: Perceived complexity for adminScoreboard is too high. [9/7]
  def adminScoreboard
  ^^^
app/controllers/assessments_controller.rb:887:7: C: Use snake_case for method names.
  def adminScoreboard
      ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:895:7: W: Useless assignment to variable - [33mcolspec[0m.
      colspec = params[:scoreboard_prop][:colspec]
      ^^^^^^^
app/controllers/assessments_controller.rb:924:3: C: Assignment Branch Condition size for scoreboard is too high. [91.58/15]
  def scoreboard
  ^^^
app/controllers/assessments_controller.rb:924:3: C: Cyclomatic complexity for scoreboard is too high. [18/6]
  def scoreboard
  ^^^
app/controllers/assessments_controller.rb:924:3: C: Method has too many lines. [94/20]
  def scoreboard
  ^^^
app/controllers/assessments_controller.rb:924:3: C: Perceived complexity for scoreboard is too high. [21/7]
  def scoreboard
  ^^^
app/controllers/assessments_controller.rb:926:101: C: Line is too long. [120/100]
    @students = CourseUserDatum.joins("INNER JOIN submissions ON course_user_datum.id=submissions.course_user_datum_id")
                                                                                                    ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:933:5: C: Use snake_case for variable names.
    problemQuery = "SELECT scores.score AS score,
    ^^^^^^^^^^^^
app/controllers/assessments_controller.rb:947:5: C: Prefer [33meach[0m over [33mfor[0m.
    for row in result do
    ^^^
app/controllers/assessments_controller.rb:973:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:975:9: C: Use snake_case for variable names.
        @errorMessage = "An error occurred while calling scoreboardHeader()"
        ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:984:5: C: Prefer [33meach[0m over [33mfor[0m.
    for grade in @grades.values do
    ^^^
app/controllers/assessments_controller.rb:996:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1002:11: C: Use snake_case for variable names.
          @errorMessage = "An error occurred while calling " \
          ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1021:5: C: Use snake_case for variable names.
    @sortedGrades = @grades.values.sort do |a, b|
    ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1030:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1032:11: C: Use snake_case for variable names.
          @errorMessage = "An error occurred while calling "\
          ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1053:3: C: Assignment Branch Condition size for setupAssessment is too high. [22.34/15]
  def setupAssessment(assName)
  ^^^
app/controllers/assessments_controller.rb:1053:7: C: Use snake_case for method names.
  def setupAssessment(assName)
      ^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1056:5: C: Use snake_case for variable names.
    assDir = File.join(Rails.root, "courses", @course.name, assName)
    ^^^^^^
app/controllers/assessments_controller.rb:1057:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless File.directory?(assDir)
    ^^^^^^
app/controllers/assessments_controller.rb:1062:5: C: Use snake_case for variable names.
    defaultName = File.join(Rails.root, "lib", "__defaultAssessment.rb")
    ^^^^^^^^^^^
app/controllers/assessments_controller.rb:1063:5: C: Use snake_case for variable names.
    defaultConfigFile = File.open(defaultName, "r")
    ^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1064:5: C: Use snake_case for variable names.
    defaultConfig = defaultConfigFile.read
    ^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1071:5: C: Use snake_case for variable names.
    assessmentConfigName = File.join(assDir, "#{assName}.rb")
    ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1074:7: C: Use snake_case for variable names.
      assessmentConfigFile = File.open(assessmentConfigName, "w")
      ^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1080:5: C: Use snake_case for variable names.
    handinDir = File.join(assDir, "handin")
    ^^^^^^^^^
app/controllers/assessments_controller.rb:1081:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless File.directory?(handinDir)
    ^^^^^^
app/controllers/assessments_controller.rb:1081:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless File.directory?(handinDir)
    ^^^^^^
app/controllers/assessments_controller.rb:1087:7: C: Use snake_case for method names.
  def updateScore(_user, score)
      ^^^^^^^^^^^
app/controllers/assessments_controller.rb:1093:7: C: Use snake_case for method names.
  def loadHandinPage
      ^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1099:3: C: Assignment Branch Condition size for put_props is too high. [96.6/15]
  def put_props
  ^^^
app/controllers/assessments_controller.rb:1099:3: C: Cyclomatic complexity for put_props is too high. [16/6]
  def put_props
  ^^^
app/controllers/assessments_controller.rb:1099:3: C: Method has too many lines. [64/20]
  def put_props
  ^^^
app/controllers/assessments_controller.rb:1099:3: C: Perceived complexity for put_props is too high. [16/7]
  def put_props
  ^^^
app/controllers/assessments_controller.rb:1138:5: C: Prefer [33meach[0m over [33mfor[0m.
    for p in probs do
    ^^^
app/controllers/assessments_controller.rb:1175:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1175:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessments_controller.rb:1182:3: C: Assignment Branch Condition size for emitColSpec is too high. [25.69/15]
  def emitColSpec(colspec)
  ^^^
app/controllers/assessments_controller.rb:1182:3: C: Cyclomatic complexity for emitColSpec is too high. [9/6]
  def emitColSpec(colspec)
  ^^^
app/controllers/assessments_controller.rb:1182:3: C: Method has too many lines. [30/20]
  def emitColSpec(colspec)
  ^^^
app/controllers/assessments_controller.rb:1182:3: C: Perceived complexity for emitColSpec is too high. [10/7]
  def emitColSpec(colspec)
  ^^^
app/controllers/assessments_controller.rb:1182:7: C: Use snake_case for method names.
  def emitColSpec(colspec)
      ^^^^^^^^^^^
app/controllers/assessments_controller.rb:1189:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1189:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessments_controller.rb:1196:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in @assessment.problems do
      ^^^
app/controllers/assessments_controller.rb:1205:5: C: Prefer [33meach[0m over [33mfor[0m.
    for hash in parsed["scoreboard"] do
    ^^^
app/controllers/assessments_controller.rb:1213:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if i < 3
      ^^
app/controllers/assessments_controller.rb:1234:3: C: Assignment Branch Condition size for scoreboardOrderSubmissions is too high. [77.9/15]
  def scoreboardOrderSubmissions(a, b)
  ^^^
app/controllers/assessments_controller.rb:1234:3: C: Cyclomatic complexity for scoreboardOrderSubmissions is too high. [23/6]
  def scoreboardOrderSubmissions(a, b)
  ^^^
app/controllers/assessments_controller.rb:1234:3: C: Method has too many lines. [53/20]
  def scoreboardOrderSubmissions(a, b)
  ^^^
app/controllers/assessments_controller.rb:1234:3: C: Perceived complexity for scoreboardOrderSubmissions is too high. [29/7]
  def scoreboardOrderSubmissions(a, b)
  ^^^
app/controllers/assessments_controller.rb:1234:7: C: Use snake_case for method names.
  def scoreboardOrderSubmissions(a, b)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1240:7: C: Use snake_case for variable names.
      aSum = 0; bSum = 0
      ^^^^
app/controllers/assessments_controller.rb:1240:15: C: Do not use semicolons to terminate expressions.
      aSum = 0; bSum = 0
              ^
app/controllers/assessments_controller.rb:1240:17: C: Use snake_case for variable names.
      aSum = 0; bSum = 0
                ^^^^
app/controllers/assessments_controller.rb:1241:7: C: Prefer [33meach[0m over [33mfor[0m.
      for key in a[:problems].keys do
      ^^^
app/controllers/assessments_controller.rb:1242:9: C: Use snake_case for variable names.
        aSum += a[:problems][key].to_f
        ^^^^
app/controllers/assessments_controller.rb:1244:7: C: Prefer [33meach[0m over [33mfor[0m.
      for key in b[:problems].keys do
      ^^^
app/controllers/assessments_controller.rb:1245:9: C: Use snake_case for variable names.
        bSum += b[:problems][key].to_f
        ^^^^
app/controllers/assessments_controller.rb:1268:7: W: Do not suppress exceptions.
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1268:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1268:27: W: Useless assignment to variable - [33me[0m.
      rescue Exception => e
                          ^
app/controllers/assessments_controller.rb:1310:3: C: Assignment Branch Condition size for createScoreboardEntry is too high. [35.37/15]
  def createScoreboardEntry(scores, autoresult)
  ^^^
app/controllers/assessments_controller.rb:1310:3: C: Cyclomatic complexity for createScoreboardEntry is too high. [14/6]
  def createScoreboardEntry(scores, autoresult)
  ^^^
app/controllers/assessments_controller.rb:1310:3: C: Method has too many lines. [32/20]
  def createScoreboardEntry(scores, autoresult)
  ^^^
app/controllers/assessments_controller.rb:1310:3: C: Perceived complexity for createScoreboardEntry is too high. [14/7]
  def createScoreboardEntry(scores, autoresult)
  ^^^
app/controllers/assessments_controller.rb:1310:7: C: Use snake_case for method names.
  def createScoreboardEntry(scores, autoresult)
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1321:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in @assessment.problems do
      ^^^
app/controllers/assessments_controller.rb:1328:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in @assessment.problems do
      ^^^
app/controllers/assessments_controller.rb:1340:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1340:25: W: Useless assignment to variable - [33me[0m.
    rescue Exception => e
                        ^
app/controllers/assessments_controller.rb:1349:9: C: Prefer [33meach[0m over [33mfor[0m.
        for item in parsed["scoreboard"] do
        ^^^
app/controllers/assessments_controller.rb:1349:13: W: Useless assignment to variable - [33mitem[0m.
        for item in parsed["scoreboard"] do
            ^^^^
app/controllers/assessments_controller.rb:1371:3: C: Assignment Branch Condition size for scoreboardHeader is too high. [33.23/15]
  def scoreboardHeader
  ^^^
app/controllers/assessments_controller.rb:1371:3: C: Cyclomatic complexity for scoreboardHeader is too high. [9/6]
  def scoreboardHeader
  ^^^
app/controllers/assessments_controller.rb:1371:3: C: Method has too many lines. [26/20]
  def scoreboardHeader
  ^^^
app/controllers/assessments_controller.rb:1371:3: C: Perceived complexity for scoreboardHeader is too high. [9/7]
  def scoreboardHeader
  ^^^
app/controllers/assessments_controller.rb:1371:7: C: Use snake_case for method names.
  def scoreboardHeader
      ^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1373:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @grades.values.empty?
    ^^
app/controllers/assessments_controller.rb:1393:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in @assessment.problems do
      ^^^
app/controllers/assessments_controller.rb:1405:5: C: Prefer [33meach[0m over [33mfor[0m.
    for object in parsed["scoreboard"] do
    ^^^
app/controllers/assessments_controller.rb:1414:3: C: Assignment Branch Condition size for get_props is too high. [27.59/15]
  def get_props
  ^^^
app/controllers/assessments_controller.rb:1414:7: C: Do not prefix reader method names with [33mget_[0m.
  def get_props
      ^^^^^^^^^
app/controllers/assessments_controller.rb:1437:3: C: Assignment Branch Condition size for releaseMatchingGrades is too high. [15.94/15]
  def releaseMatchingGrades
  ^^^
app/controllers/assessments_controller.rb:1437:7: C: Use snake_case for method names.
  def releaseMatchingGrades
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/assessments_controller.rb:1470:101: C: Line is too long. [104/100]
    params[:autograde_prop].permit(:assessment_id, :autograde_timeout, :autograde_image, :release_score)
                                                                                                    ^^^^
app/controllers/assessments_controller.rb:1484:101: C: Line is too long. [108/100]
    ass.permit(:name, :display_name, :category_name, :has_autograde, :has_svn, :has_scoreboard, :group_size)
                                                                                                    ^^^^^^^^
app/controllers/assessments_controller.rb:1495:3: C: Assignment Branch Condition size for valid_asmt_tar is too high. [24.21/15]
  def valid_asmt_tar(tar_extract)
  ^^^
app/controllers/assessments_controller.rb:1495:3: C: Cyclomatic complexity for valid_asmt_tar is too high. [10/6]
  def valid_asmt_tar(tar_extract)
  ^^^
app/controllers/assessments_controller.rb:1495:3: C: Method has too many lines. [35/20]
  def valid_asmt_tar(tar_extract)
  ^^^
app/controllers/assessments_controller.rb:1495:3: C: Perceived complexity for valid_asmt_tar is too high. [13/7]
  def valid_asmt_tar(tar_extract)
  ^^^
app/controllers/attachments_controller.rb:33:3: C: Assignment Branch Condition size for show is too high. [16.79/15]
  def show
  ^^^
app/controllers/attachments_controller.rb:52:3: C: Cyclomatic complexity for update is too high. [8/6]
  def update
  ^^^
app/controllers/attachments_controller.rb:52:3: C: Perceived complexity for update is too high. [11/7]
  def update
  ^^^
app/controllers/course_user_data_controller.rb:1:1: C: Class definition is too long. [192/100]
class CourseUserDataController < ApplicationController
^^^^^
app/controllers/course_user_data_controller.rb:1:1: C: Missing top-level class documentation comment.
class CourseUserDataController < ApplicationController
^^^^^
app/controllers/course_user_data_controller.rb:6:5: C: Use snake_case for variable names.
    @requestedUser = @cud
    ^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:12:5: C: Use snake_case for variable names.
    @newCUD = @course.course_user_data.new
    ^^^^^^^
app/controllers/course_user_data_controller.rb:18:3: C: Assignment Branch Condition size for create is too high. [51.34/15]
  def create
  ^^^
app/controllers/course_user_data_controller.rb:18:3: C: Cyclomatic complexity for create is too high. [11/6]
  def create
  ^^^
app/controllers/course_user_data_controller.rb:18:3: C: Method has too many lines. [39/20]
  def create
  ^^^
app/controllers/course_user_data_controller.rb:18:3: C: Perceived complexity for create is too high. [15/7]
  def create
  ^^^
app/controllers/course_user_data_controller.rb:19:5: C: Use snake_case for variable names.
    @newCUD = @course.course_user_data.new(cud_params)
    ^^^^^^^
app/controllers/course_user_data_controller.rb:30:7: C: Use snake_case for variable names.
      @newUser = User.new(cud_params[:user_attributes])
      ^^^^^^^^
app/controllers/course_user_data_controller.rb:40:11: C: Do not write to stdout. Use Rails' logger if you want to log.
          print msg
          ^^^^^
app/controllers/course_user_data_controller.rb:71:5: C: Use snake_case for variable names.
    @requestedUser = @cud.course.course_user_data.find(params[:id])
    ^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:83:3: C: Assignment Branch Condition size for edit is too high. [21.93/15]
  def edit
  ^^^
app/controllers/course_user_data_controller.rb:83:3: C: Cyclomatic complexity for edit is too high. [7/6]
  def edit
  ^^^
app/controllers/course_user_data_controller.rb:84:5: C: Use snake_case for variable names.
    @editCUD = @course.course_user_data.find(params[:id])
    ^^^^^^^^
app/controllers/course_user_data_controller.rb:100:3: C: Assignment Branch Condition size for update is too high. [38.33/15]
  def update
  ^^^
app/controllers/course_user_data_controller.rb:100:3: C: Cyclomatic complexity for update is too high. [14/6]
  def update
  ^^^
app/controllers/course_user_data_controller.rb:100:3: C: Method has too many lines. [27/20]
  def update
  ^^^
app/controllers/course_user_data_controller.rb:100:3: C: Perceived complexity for update is too high. [17/7]
  def update
  ^^^
app/controllers/course_user_data_controller.rb:104:5: C: Use snake_case for variable names.
    @editCUD = @course.course_user_data.find(params[:id])
    ^^^^^^^^
app/controllers/course_user_data_controller.rb:105:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @editCUD.nil?
    ^^
app/controllers/course_user_data_controller.rb:140:3: C: Assignment Branch Condition size for destroy is too high. [15.26/15]
  def destroy
  ^^^
app/controllers/course_user_data_controller.rb:140:3: C: Cyclomatic complexity for destroy is too high. [7/6]
  def destroy
  ^^^
app/controllers/course_user_data_controller.rb:141:5: C: Use snake_case for variable names.
    @destroyCUD = @course.course_user_data.find(params[:id])
    ^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:152:7: C: Use snake_case for method names.
  def destroyConfirm
      ^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:153:5: C: Use snake_case for variable names.
    @destroyCUD = @course.course_user_data.find(params[:course_user_datum_id])
    ^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:157:3: C: Assignment Branch Condition size for sudo is too high. [59.47/15]
  def sudo
  ^^^
app/controllers/course_user_data_controller.rb:157:3: C: Cyclomatic complexity for sudo is too high. [14/6]
  def sudo
  ^^^
app/controllers/course_user_data_controller.rb:157:3: C: Method has too many lines. [26/20]
  def sudo
  ^^^
app/controllers/course_user_data_controller.rb:157:3: C: Perceived complexity for sudo is too high. [14/7]
  def sudo
  ^^^
app/controllers/course_user_data_controller.rb:204:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if @cud.instructor
    ^^
app/controllers/course_user_data_controller.rb:212:101: C: Line is too long. [120/100]
                                                :lecture, :section, :instructor, :dropped, :nickname, :course_assistant,
                                                                                                    ^^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:217:101: C: Line is too long. [120/100]
                                                :lecture, :section, :instructor, :dropped, :nickname, :course_assistant,
                                                                                                    ^^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:229:101: C: Line is too long. [120/100]
                                                :lecture, :section, :instructor, :dropped, :nickname, :course_assistant,
                                                                                                    ^^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:230:101: C: Line is too long. [104/100]
                                                user_attributes: [:id, :email, :first_name, :last_name],
                                                                                                    ^^^^
app/controllers/course_user_data_controller.rb:234:101: C: Line is too long. [120/100]
                                                :lecture, :section, :instructor, :dropped, :nickname, :course_assistant,
                                                                                                    ^^^^^^^^^^^^^^^^^^^^
app/controllers/course_user_data_controller.rb:235:101: C: Line is too long. [104/100]
                                                user_attributes: [:id, :email, :first_name, :last_name],
                                                                                                    ^^^^
app/controllers/course_user_data_controller.rb:238:101: C: Line is too long. [104/100]
      params.require(:course_user_datum).permit(:nickname) # user_attributes: [:first_name, :last_name])
                                                                                                    ^^^^
app/controllers/courses_controller.rb:6:1: C: Class definition is too long. [540/100]
class CoursesController < ApplicationController
^^^^^
app/controllers/courses_controller.rb:6:1: C: Missing top-level class documentation comment.
class CoursesController < ApplicationController
^^^^^
app/controllers/courses_controller.rb:32:3: C: Assignment Branch Condition size for manage is too high. [22.89/15]
  def manage
  ^^^
app/controllers/courses_controller.rb:69:5: C: Use snake_case for variable names.
    @newCourse = Course.new
    ^^^^^^^^^^
app/controllers/courses_controller.rb:74:3: C: Assignment Branch Condition size for create is too high. [66.29/15]
  def create
  ^^^
app/controllers/courses_controller.rb:74:3: C: Cyclomatic complexity for create is too high. [13/6]
  def create
  ^^^
app/controllers/courses_controller.rb:74:3: C: Method has too many lines. [49/20]
  def create
  ^^^
app/controllers/courses_controller.rb:74:3: C: Perceived complexity for create is too high. [16/7]
  def create
  ^^^
app/controllers/courses_controller.rb:81:5: C: Use snake_case for variable names.
    @newCourse = Course.new(new_course_params)
    ^^^^^^^^^^
app/controllers/courses_controller.rb:106:9: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
        rescue Exception => e
        ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:113:7: C: Use snake_case for variable names.
      newCUD = @newCourse.course_user_data.new
      ^^^^^^
app/controllers/courses_controller.rb:157:3: C: Assignment Branch Condition size for destroy is too high. [19.67/15]
  def destroy
  ^^^
app/controllers/courses_controller.rb:177:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if request.post?
    ^^
app/controllers/courses_controller.rb:190:3: C: Assignment Branch Condition size for userLookup is too high. [17.58/15]
  def userLookup
  ^^^
app/controllers/courses_controller.rb:190:7: C: Use snake_case for method names.
  def userLookup
      ^^^^^^^^^^
app/controllers/courses_controller.rb:199:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if user.nil?
    ^^
app/controllers/courses_controller.rb:214:101: C: Line is too long. [135/100]
      @cuds = @course.course_user_data.joins(:user).order("users.email ASC").where(CourseUserDatum.conditions_by_like(params[:search]))
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:242:3: C: Assignment Branch Condition size for uploadRoster is too high. [21.21/15]
  def uploadRoster
  ^^^
app/controllers/courses_controller.rb:242:3: C: Cyclomatic complexity for uploadRoster is too high. [8/6]
  def uploadRoster
  ^^^
app/controllers/courses_controller.rb:242:3: C: Perceived complexity for uploadRoster is too high. [9/7]
  def uploadRoster
  ^^^
app/controllers/courses_controller.rb:242:7: C: Use snake_case for method names.
  def uploadRoster
      ^^^^^^^^^^^^
app/controllers/courses_controller.rb:254:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception => e
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:265:3: C: Assignment Branch Condition size for downloadRoster is too high. [16.19/15]
  def downloadRoster
  ^^^
app/controllers/courses_controller.rb:265:7: C: Use snake_case for method names.
  def downloadRoster
      ^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:270:5: C: Prefer [33meach[0m over [33mfor[0m.
    for cud in @cuds do
    ^^^
app/controllers/courses_controller.rb:283:7: C: Use snake_case for method names.
  def installAssessment
      ^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:284:5: C: Use snake_case for variable names.
    @assignDir = File.join(Rails.root, "courses", @course.name)
    ^^^^^^^^^^
app/controllers/courses_controller.rb:285:5: C: Use snake_case for variable names.
    @availableAssessments = []
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:290:11: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          if filename =~ /[^a-z0-9]/
          ^^
app/controllers/courses_controller.rb:296:11: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          unless assessment
          ^^^^^^
app/controllers/courses_controller.rb:301:7: C: Use snake_case for variable names.
      @availableAssessments = @availableAssessments.sort
      ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:302:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => error
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:310:3: C: Assignment Branch Condition size for email is too high. [22.05/15]
  def email
  ^^^
app/controllers/courses_controller.rb:310:3: C: Method has too many lines. [21/20]
  def email
  ^^^
app/controllers/courses_controller.rb:311:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if request.post?
    ^^
app/controllers/courses_controller.rb:325:7: C: Use snake_case for variable names.
      bccString = make_dlist(@cuds)
      ^^^^^^^^^
app/controllers/courses_controller.rb:344:3: C: Assignment Branch Condition size for runMoss is too high. [43.61/15]
  def runMoss
  ^^^
app/controllers/courses_controller.rb:344:3: C: Cyclomatic complexity for runMoss is too high. [11/6]
  def runMoss
  ^^^
app/controllers/courses_controller.rb:344:3: C: Method has too many lines. [30/20]
  def runMoss
  ^^^
app/controllers/courses_controller.rb:344:3: C: Perceived complexity for runMoss is too high. [11/7]
  def runMoss
  ^^^
app/controllers/courses_controller.rb:344:7: C: Use snake_case for method names.
  def runMoss
      ^^^^^^^
app/controllers/courses_controller.rb:350:5: C: Use snake_case for variable names.
    assessmentIDs = params[:assessments]
    ^^^^^^^^^^^^^
app/controllers/courses_controller.rb:355:7: C: Prefer [33meach[0m over [33mfor[0m.
      for aID in assessmentIDs.keys do
      ^^^
app/controllers/courses_controller.rb:355:11: C: Use snake_case for variable names.
      for aID in assessmentIDs.keys do
          ^^^
app/controllers/courses_controller.rb:361:9: C: Use snake_case for variable names.
        assessmentCUD = assessment.course.course_user_data.joins(:user).find_by(users: { email: current_user.email }, instructor: true)
        ^^^^^^^^^^^^^
app/controllers/courses_controller.rb:361:101: C: Line is too long. [135/100]
        assessmentCUD = assessment.course.course_user_data.joins(:user).find_by(users: { email: current_user.email }, instructor: true)
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:370:5: C: Use snake_case for variable names.
    @mossCmd = [Rails.root.join("vendor", "mossnet -d")]
    ^^^^^^^^
app/controllers/courses_controller.rb:374:5: C: Use snake_case for variable names.
    tmpDir = Dir.mktmpdir("#{@cud.user.email}Moss", Rails.root.join("tmp"))
    ^^^^^^
app/controllers/courses_controller.rb:381:5: C: Use snake_case for variable names.
    @mossCmdString = @mossCmd.join(" ")
    ^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:382:5: C: Use snake_case for variable names.
    @mossExit = $CHILD_STATUS
    ^^^^^^^^^
app/controllers/courses_controller.rb:383:5: C: Use snake_case for variable names.
    @mossOutput = `#{@mossCmdString} 2>&1`
    ^^^^^^^^^^^
app/controllers/courses_controller.rb:396:101: C: Line is too long. [121/100]
    params.require(:editCourse).permit(:name, :semester, :late_slack, :grace_days, :display_name, :start_date, :end_date,
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:397:101: C: Line is too long. [101/100]
                                       :disabled, :exam_in_progress, :version_threshold, :gb_message,
                                                                                                    ^
app/controllers/courses_controller.rb:423:3: C: Assignment Branch Condition size for save_uploaded_roster is too high. [90.87/15]
  def save_uploaded_roster
  ^^^
app/controllers/courses_controller.rb:423:3: C: Cyclomatic complexity for save_uploaded_roster is too high. [10/6]
  def save_uploaded_roster
  ^^^
app/controllers/courses_controller.rb:423:3: C: Method has too many lines. [74/20]
  def save_uploaded_roster
  ^^^
app/controllers/courses_controller.rb:423:3: C: Perceived complexity for save_uploaded_roster is too high. [12/7]
  def save_uploaded_roster
  ^^^
app/controllers/courses_controller.rb:425:7: C: Use snake_case for variable names.
      rowNum = 0
      ^^^^^^
app/controllers/courses_controller.rb:428:9: C: Use snake_case for variable names.
        newCUD = params["cuds"][rowNum.to_s]
        ^^^^^^
app/controllers/courses_controller.rb:444:13: C: Avoid more than 3 levels of block nesting.
            if user.nil?
            ^^^^^^^^^^^^
app/controllers/courses_controller.rb:444:13: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
            if user.nil?
            ^^
app/controllers/courses_controller.rb:481:101: C: Line is too long. [107/100]
          existing = @course.course_user_data.includes(:user).where(users: { email: newCUD[:email] }).first
                                                                                                    ^^^^^^^
app/controllers/courses_controller.rb:483:11: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          if existing.nil?
          ^^
app/controllers/courses_controller.rb:492:101: C: Line is too long. [107/100]
          existing = @course.course_user_data.includes(:user).where(users: { email: newCUD[:email] }).first
                                                                                                    ^^^^^^^
app/controllers/courses_controller.rb:494:11: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          if existing.nil?
          ^^
app/controllers/courses_controller.rb:525:9: C: Use snake_case for variable names.
        rowNum += 1
        ^^^^^^
app/controllers/courses_controller.rb:530:3: C: Assignment Branch Condition size for parse_roster_csv is too high. [86.29/15]
  def parse_roster_csv
  ^^^
app/controllers/courses_controller.rb:530:3: C: Cyclomatic complexity for parse_roster_csv is too high. [12/6]
  def parse_roster_csv
  ^^^
app/controllers/courses_controller.rb:530:3: C: Method has too many lines. [53/20]
  def parse_roster_csv
  ^^^
app/controllers/courses_controller.rb:530:3: C: Perceived complexity for parse_roster_csv is too high. [13/7]
  def parse_roster_csv
  ^^^
app/controllers/courses_controller.rb:533:5: C: Use snake_case for variable names.
    @currentCUDs = @course.course_user_data.all.to_a
    ^^^^^^^^^^^^
app/controllers/courses_controller.rb:534:5: C: Use snake_case for variable names.
    @newCUDs = []
    ^^^^^^^^
app/controllers/courses_controller.rb:540:9: C: Use snake_case for variable names.
        newCUD = { email: row[1].to_s,
        ^^^^^^
app/controllers/courses_controller.rb:549:37: W: Shadowing outer local variable - [33mcud[0m.
        cud = @currentCUDs.find do |cud|
                                    ^^^
app/controllers/courses_controller.rb:562:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:564:7: W: Unreachable code detected.
      flash[:error] = "Error uploading the CSV file!: " +
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:570:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if params[:upload][:dropMissing] == "1"
    ^^
app/controllers/courses_controller.rb:575:7: C: Prefer [33meach[0m over [33mfor[0m.
      for cud in @currentCUDs do # These are the drops
      ^^^
app/controllers/courses_controller.rb:576:9: C: Use snake_case for variable names.
        newCUD = { email: cud.user.email,
        ^^^^^^
app/controllers/courses_controller.rb:593:3: C: Assignment Branch Condition size for detectAndConvertRoster is too high. [78.39/15]
  def detectAndConvertRoster(roster)
  ^^^
app/controllers/courses_controller.rb:593:3: C: Method has too many lines. [32/20]
  def detectAndConvertRoster(roster)
  ^^^
app/controllers/courses_controller.rb:593:3: C: Perceived complexity for detectAndConvertRoster is too high. [9/7]
  def detectAndConvertRoster(roster)
  ^^^
app/controllers/courses_controller.rb:593:7: C: Use snake_case for method names.
  def detectAndConvertRoster(roster)
      ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:594:5: C: Use snake_case for variable names.
    parsedRoster = CSV.parse(roster)
    ^^^^^^^^^^^^
app/controllers/courses_controller.rb:611:7: C: Use snake_case for variable names.
      numRows = parsedRoster.length - offset
      ^^^^^^^
app/controllers/courses_controller.rb:612:7: C: Use snake_case for variable names.
      convertedRoster = Array.new(numRows) { Array.new(11) }
      ^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:614:7: C: Prefer [33meach[0m over [33mfor[0m.
      for i in 0..(numRows - 1)
      ^^^
app/controllers/courses_controller.rb:640:3: C: Assignment Branch Condition size for extract_asmt_for_moss is too high. [46.01/15]
  def extract_asmt_for_moss(assessments)
  ^^^
app/controllers/courses_controller.rb:640:3: C: Cyclomatic complexity for extract_asmt_for_moss is too high. [10/6]
  def extract_asmt_for_moss(assessments)
  ^^^
app/controllers/courses_controller.rb:640:3: C: Method has too many lines. [32/20]
  def extract_asmt_for_moss(assessments)
  ^^^
app/controllers/courses_controller.rb:640:3: C: Perceived complexity for extract_asmt_for_moss is too high. [10/7]
  def extract_asmt_for_moss(assessments)
  ^^^
app/controllers/courses_controller.rb:642:5: C: Prefer [33meach[0m over [33mfor[0m.
    for ass in assessments do
    ^^^
app/controllers/courses_controller.rb:644:7: C: Use snake_case for variable names.
      assDir = File.join(tmpDir, "#{ass.name}-#{ass.course.name}")
      ^^^^^^
app/controllers/courses_controller.rb:648:7: C: Use snake_case for variable names.
      isArchive = params[:isArchive] && params[:isArchive][ass.id.to_s]
      ^^^^^^^^^
app/controllers/courses_controller.rb:651:7: C: Prefer [33meach[0m over [33mfor[0m.
      for sub in ass.submissions.latest do
      ^^^
app/controllers/courses_controller.rb:651:7: C: Use [33mnext[0m to skip iteration.
      for sub in ass.submissions.latest do
      ^^^
app/controllers/courses_controller.rb:652:9: C: Use snake_case for variable names.
        subFile = sub.handin_file_path
        ^^^^^^^
app/controllers/courses_controller.rb:656:9: C: Use snake_case for variable names.
        stuDir = File.join(assDir, sub.course_user_datum.email)
        ^^^^^^
app/controllers/courses_controller.rb:669:29: C: Use [33mnext[0m to skip iteration.
            archive_extract.each do |entry|
                            ^^^^
app/controllers/courses_controller.rb:671:15: C: Avoid more than 3 levels of block nesting.
              unless Archive.looks_like_directory?(pathname)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:677:19: C: Avoid using [33mrescue[0m in its modifier form.
                  out.fsync rescue nil # for filesystems without fsync(2)
                  ^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:681:11: C: Avoid more than 3 levels of block nesting.
          rescue
          ^^^^^^
app/controllers/courses_controller.rb:692:3: C: Assignment Branch Condition size for extract_tar_for_moss is too high. [25.06/15]
  def extract_tar_for_moss(external_tar)
  ^^^
app/controllers/courses_controller.rb:692:3: C: Method has too many lines. [26/20]
  def extract_tar_for_moss(external_tar)
  ^^^
app/controllers/courses_controller.rb:695:5: C: Use snake_case for variable names.
    extTarDir = File.join(tmpDir, "external_input")
    ^^^^^^^^^
app/controllers/courses_controller.rb:699:5: C: Use snake_case for variable names.
    extTarPath = File.join(extTarDir, "input_file")
    ^^^^^^^^^^
app/controllers/courses_controller.rb:704:5: C: Use snake_case for variable names.
    extFilesDir = File.join(extTarDir, "submissions")
    ^^^^^^^^^^^
app/controllers/courses_controller.rb:713:23: C: Use [33mnext[0m to skip iteration.
      archive_extract.each do |entry|
                      ^^^^
app/controllers/courses_controller.rb:721:13: C: Avoid using [33mrescue[0m in its modifier form.
            out.fsync rescue nil # for filesystems without fsync(2)
            ^^^^^^^^^^^^^^^^^^^^
app/controllers/extensions_controller.rb:20:3: C: Assignment Branch Condition size for create is too high. [17.29/15]
  def create
  ^^^
app/controllers/gradebooks_controller.rb:6:1: C: Missing top-level class documentation comment.
class GradebooksController < ApplicationController
^^^^^
app/controllers/gradebooks_controller.rb:31:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless @cud.has_auth_level?(:instructor) || @section == @cud.section
    ^^^^^^
app/controllers/gradebooks_controller.rb:38:3: C: Assignment Branch Condition size for student is too high. [24.43/15]
  def student
  ^^^
app/controllers/gradebooks_controller.rb:38:3: C: Cyclomatic complexity for student is too high. [9/6]
  def student
  ^^^
app/controllers/gradebooks_controller.rb:38:3: C: Perceived complexity for student is too high. [10/7]
  def student
  ^^^
app/controllers/gradebooks_controller.rb:39:13: C: Avoid multi-line ?: (the ternary operator); use [33mif[0m/[33munless[0m instead.
    @_cud = params[:id] ?
            ^^^^^^^^^^^^^
app/controllers/gradebooks_controller.rb:74:3: C: Assignment Branch Condition size for statistics is too high. [22.89/15]
  def statistics
  ^^^
app/controllers/gradebooks_controller.rb:106:7: C: Use snake_case for method names.
  def bulkRelease
      ^^^^^^^^^^^
app/controllers/gradebooks_controller.rb:107:5: C: Prefer [33meach[0m over [33mfor[0m.
    for assessment in @course.assessments do
    ^^^
app/controllers/gradebooks_controller.rb:108:7: C: Prefer [33meach[0m over [33mfor[0m.
      for problem in assessment.problems do
      ^^^
app/controllers/gradebooks_controller.rb:110:9: C: Prefer [33meach[0m over [33mfor[0m.
        for score in scores do
        ^^^
app/controllers/groups_controller.rb:1:1: C: Class definition is too long. [225/100]
class GroupsController < ApplicationController
^^^^^
app/controllers/groups_controller.rb:1:1: C: Missing top-level class documentation comment.
class GroupsController < ApplicationController
^^^^^
app/controllers/groups_controller.rb:14:3: C: Assignment Branch Condition size for index is too high. [16.97/15]
  def index
  ^^^
app/controllers/groups_controller.rb:25:5: C: Use snake_case for variable names.
    @groupAssessments = @course.assessments
    ^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:26:101: C: Line is too long. [126/100]
                        .where("`group_size` > 1 AND `group_size` <= ?", @assessment.group_size).where.not(id: @assessment.id)
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:27:5: C: Use snake_case for variable names.
    @grouplessCUDs = @assessment.grouplessCUDs
    ^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:36:3: C: Assignment Branch Condition size for show is too high. [20.35/15]
  def show
  ^^^
app/controllers/groups_controller.rb:36:3: C: Cyclomatic complexity for show is too high. [8/6]
  def show
  ^^^
app/controllers/groups_controller.rb:36:3: C: Perceived complexity for show is too high. [9/7]
  def show
  ^^^
app/controllers/groups_controller.rb:47:7: C: Use snake_case for variable names.
      @grouplessCUDs = @assessment.grouplessCUDs
      ^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:56:3: C: Assignment Branch Condition size for new is too high. [15.81/15]
  def new
  ^^^
app/controllers/groups_controller.rb:59:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if aud.group
      ^^
app/controllers/groups_controller.rb:65:5: C: Use snake_case for variable names.
    @grouplessCUDs = @assessment.grouplessCUDs
    ^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:66:5: C: Use snake_case for variable names.
    @unfullGroups = @assessment.groups.all.select { |g| g.assessment_user_data.size < @assessment.group_size }
    ^^^^^^^^^^^^^
app/controllers/groups_controller.rb:66:101: C: Line is too long. [110/100]
    @unfullGroups = @assessment.groups.all.select { |g| g.assessment_user_data.size < @assessment.group_size }
                                                                                                    ^^^^^^^^^^
app/controllers/groups_controller.rb:76:3: C: Assignment Branch Condition size for create is too high. [33.97/15]
  def create
  ^^^
app/controllers/groups_controller.rb:76:3: C: Cyclomatic complexity for create is too high. [8/6]
  def create
  ^^^
app/controllers/groups_controller.rb:76:3: C: Method has too many lines. [25/20]
  def create
  ^^^
app/controllers/groups_controller.rb:76:3: C: Perceived complexity for create is too high. [9/7]
  def create
  ^^^
app/controllers/groups_controller.rb:77:17: W: Assignment in condition - you probably meant to use [33m==[0m.
    unless cud2 = get_member_cud
                ^
app/controllers/groups_controller.rb:144:3: C: Assignment Branch Condition size for import is too high. [40.87/15]
  def import
  ^^^
app/controllers/groups_controller.rb:144:3: C: Cyclomatic complexity for import is too high. [11/6]
  def import
  ^^^
app/controllers/groups_controller.rb:144:3: C: Method has too many lines. [29/20]
  def import
  ^^^
app/controllers/groups_controller.rb:144:3: C: Perceived complexity for import is too high. [12/7]
  def import
  ^^^
app/controllers/groups_controller.rb:158:30: C: Use [33mnext[0m to skip iteration.
      g.assessment_user_data.each do |a|
                             ^^^^
app/controllers/groups_controller.rb:164:11: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          if aud.save!
          ^^
app/controllers/groups_controller.rb:169:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if count > 0
      ^^
app/controllers/groups_controller.rb:186:3: C: Assignment Branch Condition size for add is too high. [26.74/15]
  def add
  ^^^
app/controllers/groups_controller.rb:186:3: C: Cyclomatic complexity for add is too high. [10/6]
  def add
  ^^^
app/controllers/groups_controller.rb:186:3: C: Perceived complexity for add is too high. [10/7]
  def add
  ^^^
app/controllers/groups_controller.rb:190:16: W: Assignment in condition - you probably meant to use [33m==[0m.
    unless cud = get_member_cud
               ^
app/controllers/groups_controller.rb:193:5: C: Use snake_case for variable names.
    newMemberAUD = @assessment.aud_for cud.id
    ^^^^^^^^^^^^
app/controllers/groups_controller.rb:195:101: C: Line is too long. [111/100]
    # if we're adding a new member, and not group-confirming someone, make sure that the group is not too large
                                                                                                    ^^^^^^^^^^^
app/controllers/groups_controller.rb:201:101: C: Line is too long. [104/100]
    # if the new member has no previous group or was already in this group, group-confirm the new member
                                                                                                    ^^^^
app/controllers/groups_controller.rb:202:101: C: Line is too long. [111/100]
    if newMemberAUD.membership_status == AssessmentUserDatum::UNCONFIRMED || newMemberAUD.group_id == @group.id
                                                                                                    ^^^^^^^^^^^
app/controllers/groups_controller.rb:217:3: C: Assignment Branch Condition size for join is too high. [18.55/15]
  def join
  ^^^
app/controllers/groups_controller.rb:218:5: C: Use snake_case for variable names.
    newMemberAUD = @assessment.aud_for(@cud.id)
    ^^^^^^^^^^^^
app/controllers/groups_controller.rb:226:101: C: Line is too long. [104/100]
    # if the new member has no previous group or was already in this group, group-confirm the new member
                                                                                                    ^^^^
app/controllers/groups_controller.rb:227:101: C: Line is too long. [111/100]
    if newMemberAUD.membership_status == AssessmentUserDatum::UNCONFIRMED || newMemberAUD.group_id == @group.id
                                                                                                    ^^^^^^^^^^^
app/controllers/groups_controller.rb:244:3: C: Assignment Branch Condition size for leave is too high. [30.1/15]
  def leave
  ^^^
app/controllers/groups_controller.rb:244:3: C: Cyclomatic complexity for leave is too high. [8/6]
  def leave
  ^^^
app/controllers/groups_controller.rb:244:3: C: Method has too many lines. [25/20]
  def leave
  ^^^
app/controllers/groups_controller.rb:244:3: C: Perceived complexity for leave is too high. [9/7]
  def leave
  ^^^
app/controllers/groups_controller.rb:264:9: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        if @group.assessment_user_data.size == 0
        ^^
app/controllers/groups_controller.rb:275:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless @assessment.has_groups?
    ^^^^^^
app/controllers/groups_controller.rb:293:3: C: Assignment Branch Condition size for get_member_cud is too high. [22.38/15]
  def get_member_cud
  ^^^
app/controllers/groups_controller.rb:293:7: C: Do not prefix reader method names with [33mget_[0m.
  def get_member_cud
      ^^^^^^^^^^^^^^
app/controllers/groups_controller.rb:298:11: C: Redundant empty [33melse[0m-clause.
          else
          ^^^^
app/controllers/groups_controller.rb:300:5: W: [33mend[0m at 300, 4 is not aligned with [33mif[0m at 294, 10
    end
    ^^^
app/controllers/home_controller.rb:27:3: C: Assignment Branch Condition size for publicSignUp is too high. [27.09/15]
  def publicSignUp
  ^^^
app/controllers/home_controller.rb:27:3: C: Cyclomatic complexity for publicSignUp is too high. [8/6]
  def publicSignUp
  ^^^
app/controllers/home_controller.rb:27:3: C: Perceived complexity for publicSignUp is too high. [9/7]
  def publicSignUp
  ^^^
app/controllers/home_controller.rb:27:7: C: Use snake_case for method names.
  def publicSignUp
      ^^^^^^^^^^^^
app/controllers/home_controller.rb:58:3: C: Assignment Branch Condition size for vmlist is too high. [18.06/15]
  def vmlist
  ^^^
app/controllers/jobs_controller.rb:8:1: C: Class definition is too long. [146/100]
class JobsController < ApplicationController
^^^^^
app/controllers/jobs_controller.rb:14:3: C: Assignment Branch Condition size for index is too high. [34.94/15]
  def index
  ^^^
app/controllers/jobs_controller.rb:14:3: C: Cyclomatic complexity for index is too high. [9/6]
  def index
  ^^^
app/controllers/jobs_controller.rb:14:3: C: Method has too many lines. [28/20]
  def index
  ^^^
app/controllers/jobs_controller.rb:14:3: C: Perceived complexity for index is too high. [10/7]
  def index
  ^^^
app/controllers/jobs_controller.rb:30:40: W: Useless assignment to variable - [33mdeadjobs[0m.
      raw_dead_jobs = TangoClient.jobs(deadjobs = 1)
                                       ^^^^^^^^
app/controllers/jobs_controller.rb:65:3: C: Assignment Branch Condition size for getjob is too high. [66.88/15]
  def getjob
  ^^^
app/controllers/jobs_controller.rb:65:3: C: Cyclomatic complexity for getjob is too high. [23/6]
  def getjob
  ^^^
app/controllers/jobs_controller.rb:65:3: C: Method has too many lines. [66/20]
  def getjob
  ^^^
app/controllers/jobs_controller.rb:65:3: C: Perceived complexity for getjob is too high. [25/7]
  def getjob
  ^^^
app/controllers/jobs_controller.rb:77:40: W: Useless assignment to variable - [33mdeadjobs[0m.
      raw_dead_jobs = TangoClient.jobs(deadjobs = 1)
                                       ^^^^^^^^
app/controllers/jobs_controller.rb:164:3: C: Assignment Branch Condition size for formatRawJob is too high. [77.11/15]
  def formatRawJob(rjob, is_live)
  ^^^
app/controllers/jobs_controller.rb:164:3: C: Cyclomatic complexity for formatRawJob is too high. [12/6]
  def formatRawJob(rjob, is_live)
  ^^^
app/controllers/jobs_controller.rb:164:3: C: Method has too many lines. [42/20]
  def formatRawJob(rjob, is_live)
  ^^^
app/controllers/jobs_controller.rb:164:3: C: Perceived complexity for formatRawJob is too high. [16/7]
  def formatRawJob(rjob, is_live)
  ^^^
app/controllers/jobs_controller.rb:164:7: C: Use snake_case for method names.
  def formatRawJob(rjob, is_live)
      ^^^^^^^^^^^^
app/controllers/scores_controller.rb:11:3: C: Assignment Branch Condition size for create is too high. [21.05/15]
  def create
  ^^^
app/controllers/scores_controller.rb:33:3: C: Assignment Branch Condition size for update is too high. [15.13/15]
  def update
  ^^^
app/controllers/submissions_controller.rb:4:1: C: Class definition is too long. [252/100]
class SubmissionsController < ApplicationController
^^^^^
app/controllers/submissions_controller.rb:4:1: C: Missing top-level class documentation comment.
class SubmissionsController < ApplicationController
^^^^^
app/controllers/submissions_controller.rb:7:101: C: Line is too long. [114/100]
  before_action :set_submission, only: [:destroy, :destroyConfirm, :download, :edit, :listArchive, :update, :view]
                                                                                                    ^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:16:5: W: Useless assignment to variable - [33mmodName[0m.
    modName = (assign + (@course.name).gsub(/[^A-Za-z0-9]/, "")).camelize
    ^^^^^^^
app/controllers/submissions_controller.rb:16:5: C: Use snake_case for variable names.
    modName = (assign + (@course.name).gsub(/[^A-Za-z0-9]/, "")).camelize
    ^^^^^^^
app/controllers/submissions_controller.rb:22:3: C: Assignment Branch Condition size for new is too high. [26.02/15]
  def new
  ^^^
app/controllers/submissions_controller.rb:29:9: C: Use snake_case for variable names.
        @errorMessage = "Couldn't find all course_user_data in #{cuds_ids}. " \
        ^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:37:7: C: Prefer [33meach[0m over [33mfor[0m.
      for cud in @course.course_user_data.joins(:user).order("email ASC") do
      ^^^
app/controllers/submissions_controller.rb:45:3: C: Assignment Branch Condition size for create is too high. [55.77/15]
  def create
  ^^^
app/controllers/submissions_controller.rb:45:3: C: Cyclomatic complexity for create is too high. [8/6]
  def create
  ^^^
app/controllers/submissions_controller.rb:45:3: C: Method has too many lines. [25/20]
  def create
  ^^^
app/controllers/submissions_controller.rb:45:3: C: Perceived complexity for create is too high. [8/7]
  def create
  ^^^
app/controllers/submissions_controller.rb:52:7: C: Use snake_case for variable names.
      @errorMessage = "Invalid CourseUserDatum ID in #{cud_ids}"
      ^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:55:5: C: Prefer [33meach[0m over [33mfor[0m.
    for cud_id in cud_ids do
    ^^^
app/controllers/submissions_controller.rb:55:5: C: Use [33mnext[0m to skip iteration.
    for cud_id in cud_ids do
    ^^^
app/controllers/submissions_controller.rb:60:101: C: Line is too long. [112/100]
        @submission.tweak = Tweak.new(params[:submission][:tweak_attributes].permit([:value, :kind, :_destroy]))
                                                                                                    ^^^^^^^^^^^^
app/controllers/submissions_controller.rb:77:5: W: Useless assignment to variable - [33msubmission[0m.
    submission = Submission.find(params[:id])
    ^^^^^^^^^^
app/controllers/submissions_controller.rb:107:3: C: Assignment Branch Condition size for update is too high. [19.42/15]
  def update
  ^^^
app/controllers/submissions_controller.rb:112:101: C: Line is too long. [110/100]
      redirect_to(history_course_assessment_path(@submission.course_user_datum.course, @assessment)) && return
                                                                                                    ^^^^^^^^^^
app/controllers/submissions_controller.rb:114:101: C: Line is too long. [131/100]
      redirect_to(edit_course_assessment_submission_path(@submission.course_user_datum.course, @assessment, @submission)) && return
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:126:101: C: Line is too long. [123/100]
    redirect_to(course_assessment_submissions_path(@submission.course_user_datum.course, @submission.assessment)) && return
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:131:7: C: Use snake_case for method names.
  def destroyConfirm
      ^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:140:3: C: Assignment Branch Condition size for missing is too high. [18.47/15]
  def missing
  ^^^
app/controllers/submissions_controller.rb:146:5: C: Prefer [33meach[0m over [33mfor[0m.
    for submission in @submissions do
    ^^^
app/controllers/submissions_controller.rb:160:3: C: Assignment Branch Condition size for downloadAll is too high. [30.68/15]
  def downloadAll
  ^^^
app/controllers/submissions_controller.rb:160:3: C: Cyclomatic complexity for downloadAll is too high. [9/6]
  def downloadAll
  ^^^
app/controllers/submissions_controller.rb:160:3: C: Method has too many lines. [21/20]
  def downloadAll
  ^^^
app/controllers/submissions_controller.rb:160:3: C: Perceived complexity for downloadAll is too high. [10/7]
  def downloadAll
  ^^^
app/controllers/submissions_controller.rb:160:7: C: Use snake_case for method names.
  def downloadAll
      ^^^^^^^^^^^
app/controllers/submissions_controller.rb:193:3: C: Assignment Branch Condition size for download is too high. [15.39/15]
  def download
  ^^^
app/controllers/submissions_controller.rb:198:44: C: Use [33m&&[0m instead of [33mand[0m.
        redirect_to [@course, @assessment] and return false
                                           ^^^
app/controllers/submissions_controller.rb:205:7: W: Useless assignment to variable - [33mmime[0m.
      mime = params[:forceMime] || @submission.detected_mime_type
      ^^^^
app/controllers/submissions_controller.rb:218:3: C: Assignment Branch Condition size for view is too high. [86.63/15]
  def view
  ^^^
app/controllers/submissions_controller.rb:218:3: C: Cyclomatic complexity for view is too high. [25/6]
  def view
  ^^^
app/controllers/submissions_controller.rb:218:3: C: Method has too many lines. [63/20]
  def view
  ^^^
app/controllers/submissions_controller.rb:218:3: C: Perceived complexity for view is too high. [28/7]
  def view
  ^^^
app/controllers/submissions_controller.rb:220:101: C: Line is too long. [104/100]
      file, pathname = Archive.get_nth_file(@submission.handin_file_path, params[:header_position].to_i)
                                                                                                    ^^^^
app/controllers/submissions_controller.rb:223:44: C: Use [33m&&[0m instead of [33mand[0m.
        redirect_to [@course, @assessment] and return false
                                           ^^^
app/controllers/submissions_controller.rb:226:7: C: Use snake_case for variable names.
      @displayFilename = pathname
      ^^^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:227:101: C: Line is too long. [111/100]
      @breadcrumbs << (view_context.link_to "View Archive", [:list_archive, @course, @assessment, @submission])
                                                                                                    ^^^^^^^^^^^
app/controllers/submissions_controller.rb:234:7: C: Use snake_case for variable names.
      @displayFilename = @submission.filename
      ^^^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:240:101: C: Line is too long. [114/100]
      send_data(file, type: "application/pdf", disposition: "inline", filename: File.basename(filename)) && return
                                                                                                    ^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:246:101: C: Line is too long. [158/100]
      flash[:error] = "Sorry, we could not display your file because it contains non-ASCII characters. Please remove these characters and resubmit your work."
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:252:7: C: Prefer [33meach[0m over [33mfor[0m.
      for i in 0...@data.length do
      ^^^
app/controllers/submissions_controller.rb:257:101: C: Line is too long. [142/100]
      flash[:error] = "Sorry, we could not parse your file because it contains non-ASCII characters. Please download file to view the source."
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:270:5: C: Use snake_case for variable names.
    @problemSummaries = {}
    ^^^^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:271:5: C: Use snake_case for variable names.
    @problemGrades = {}
    ^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:274:5: C: Prefer [33meach[0m over [33mfor[0m.
    for annotation in @annotations do
    ^^^
app/controllers/submissions_controller.rb:281:101: C: Line is too long. [102/100]
      @problemSummaries[problem] << [description, value, line, annotation.submitted_by, annotation.id]
                                                                                                    ^^
app/controllers/submissions_controller.rb:299:101: C: Line is too long. [105/100]
        redirect_to([:history, @course, @assessment, cud_id: @submission.course_user_datum_id]) && return
                                                                                                    ^^^^^
app/controllers/submissions_controller.rb:307:7: C: Use snake_case for method names.
  def listArchive
      ^^^^^^^^^^^
app/controllers/submissions_controller.rb:323:7: C: Do not prefix reader method names with [33mget_[0m.
  def get_submission_file
      ^^^^^^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:326:42: C: Use [33m&&[0m instead of [33mand[0m.
      redirect_to [@course, @assessment] and return false
                                         ^^^
app/controllers/submissions_controller.rb:334:42: C: Use [33m&&[0m instead of [33mand[0m.
      redirect_to [@course, @assessment] and return false
                                         ^^^
app/controllers/submissions_controller.rb:342:7: C: Use snake_case for method names.
  def extractAndrewID(filename)
      ^^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:343:5: C: Use snake_case for variable names.
    underscoreInd = filename.index("_")
    ^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:344:5: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    unless underscoreInd.nil?
    ^^^^^^
app/controllers/submissions_controller.rb:352:7: C: Use snake_case for method names.
  def extractVersion(filename)
      ^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:353:5: C: Use snake_case for variable names.
    firstUnderscoreInd = filename.index("_")
    ^^^^^^^^^^^^^^^^^^
app/controllers/submissions_controller.rb:356:5: C: Use snake_case for variable names.
    secondUnderscoreInd = filename.index("_", firstUnderscoreInd + 1)
    ^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:1:1: C: Missing top-level class documentation comment.
class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:1:7: C: Use nested module/class definitions instead of compact style.
class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:2:3: C: Assignment Branch Condition size for facebook is too high. [33.79/15]
  def facebook
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:2:3: C: Cyclomatic complexity for facebook is too high. [8/6]
  def facebook
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:2:3: C: Perceived complexity for facebook is too high. [10/7]
  def facebook
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:4:15: W: Assignment in condition - you probably meant to use [33m==[0m.
      if data = request.env["omniauth.auth"]
              ^
app/controllers/users/omniauth_callbacks_controller.rb:17:101: C: Line is too long. [102/100]
        sign_in_and_redirect @user, event: :authentication # this will throw if @user is not activated
                                                                                                    ^^
app/controllers/users/omniauth_callbacks_controller.rb:28:3: C: Assignment Branch Condition size for google_oauth2 is too high. [33.44/15]
  def google_oauth2
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:28:3: C: Perceived complexity for google_oauth2 is too high. [8/7]
  def google_oauth2
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:30:15: W: Assignment in condition - you probably meant to use [33m==[0m.
      if data = request.env["omniauth.auth"]
              ^
app/controllers/users/omniauth_callbacks_controller.rb:42:101: C: Line is too long. [102/100]
        sign_in_and_redirect @user, event: :authentication # this will throw if @user is not activated
                                                                                                    ^^
app/controllers/users/omniauth_callbacks_controller.rb:52:3: C: Assignment Branch Condition size for shibboleth is too high. [68.26/15]
  def shibboleth
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:52:3: C: Cyclomatic complexity for shibboleth is too high. [12/6]
  def shibboleth
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:52:3: C: Method has too many lines. [48/20]
  def shibboleth
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:52:3: C: Perceived complexity for shibboleth is too high. [14/7]
  def shibboleth
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:54:15: W: Assignment in condition - you probably meant to use [33m==[0m.
      if data = request.env["omniauth.auth"]
              ^
app/controllers/users/omniauth_callbacks_controller.rb:66:101: C: Line is too long. [102/100]
        sign_in_and_redirect @user, event: :authentication # this will throw if @user is not activated
                                                                                                    ^^
app/controllers/users/omniauth_callbacks_controller.rb:79:11: C: Avoid more than 3 levels of block nesting.
          if @user.email.include? "@andrew.cmu.edu"
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:80:13: C: Use snake_case for variable names.
            ldapResult = User.ldap_lookup(@user.email.split("@")[0])
            ^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:91:11: C: Avoid more than 3 levels of block nesting.
          if @user.first_name.nil?
          ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:91:11: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          if @user.first_name.nil?
          ^^
app/controllers/users/omniauth_callbacks_controller.rb:94:11: C: Avoid more than 3 levels of block nesting.
          if @user.last_name.nil?
          ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:94:11: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          if @user.last_name.nil?
          ^^
app/controllers/users/omniauth_callbacks_controller.rb:108:101: C: Line is too long. [102/100]
        sign_in_and_redirect @user, event: :authentication # this will throw if @user is not activated
                                                                                                    ^^
app/controllers/users_controller.rb:1:1: C: Class definition is too long. [157/100]
class UsersController < ApplicationController
^^^^^
app/controllers/users_controller.rb:1:1: C: Missing top-level class documentation comment.
class UsersController < ApplicationController
^^^^^
app/controllers/users_controller.rb:16:9: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        if cud.instructor?
        ^^
app/controllers/users_controller.rb:29:3: C: Assignment Branch Condition size for show is too high. [34.47/15]
  def show
  ^^^
app/controllers/users_controller.rb:29:3: C: Cyclomatic complexity for show is too high. [9/6]
  def show
  ^^^
app/controllers/users_controller.rb:29:3: C: Method has too many lines. [31/20]
  def show
  ^^^
app/controllers/users_controller.rb:29:3: C: Perceived complexity for show is too high. [11/7]
  def show
  ^^^
app/controllers/users_controller.rb:45:12: C: Use [33mnext[0m to skip iteration.
      cuds.each do |cud|
           ^^^^
app/controllers/users_controller.rb:49:11: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
          unless user_cud.nil?
          ^^^^^^
app/controllers/users_controller.rb:87:3: C: Assignment Branch Condition size for create is too high. [26.65/15]
  def create
  ^^^
app/controllers/users_controller.rb:87:3: C: Perceived complexity for create is too high. [8/7]
  def create
  ^^^
app/controllers/users_controller.rb:115:3: C: Assignment Branch Condition size for edit is too high. [17.97/15]
  def edit
  ^^^
app/controllers/users_controller.rb:115:3: C: Perceived complexity for edit is too high. [8/7]
  def edit
  ^^^
app/controllers/users_controller.rb:137:3: C: Assignment Branch Condition size for update is too high. [33.66/15]
  def update
  ^^^
app/controllers/users_controller.rb:137:3: C: Cyclomatic complexity for update is too high. [11/6]
  def update
  ^^^
app/controllers/users_controller.rb:137:3: C: Method has too many lines. [24/20]
  def update
  ^^^
app/controllers/users_controller.rb:137:3: C: Perceived complexity for update is too high. [14/7]
  def update
  ^^^
app/controllers/users_controller.rb:157:20: C: Avoid multi-line ?: (the ternary operator); use [33mif[0m/[33munless[0m instead.
    if user.update(current_user.administrator? ?
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:169:3: C: Assignment Branch Condition size for destroy is too high. [19.67/15]
  def destroy
  ^^^
app/controllers/users_controller.rb:181:7: C: Annotation keywords should be all upper case, followed by a colon and a space, then a note describing the problem.
    # TODO Need to cleanup user resources here
      ^^^^
app/helpers/account_helper.rb:1:1: C: Missing top-level module documentation comment.
module AccountHelper
^^^^^^
app/helpers/admin_helper.rb:1:1: C: Missing top-level module documentation comment.
module AdminHelper
^^^^^^
app/helpers/annotations_helper.rb:1:1: C: Missing top-level module documentation comment.
module AnnotationsHelper
^^^^^^
app/helpers/application_helper.rb:19:7: C: Use snake_case for method names.
  def processStackDump(dump)
      ^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:25:7: C: Use snake_case for method names.
  def roundValue(val)
      ^^^^^^^^^^
app/helpers/application_helper.rb:79:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if submission.syntax?
    ^^
app/helpers/application_helper.rb:86:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if Archive.archive? submission.handin_file_path
    ^^
app/helpers/application_helper.rb:87:101: C: Line is too long. [102/100]
      link_to title, list_archive_course_assessment_submission_path(@course, @assessment, submission),
                                                                                                    ^^
app/helpers/application_helper.rb:103:63: C: Favor [33mformat[0m over [33mString#%[0m.
    image_tag("/images/go.png", style: "vertical-align: %dpx" % vertical_align)
                                                              ^
app/helpers/application_helper.rb:111:3: C: Cyclomatic complexity for computed_score is too high. [7/6]
  def computed_score(link = nil, nil_to_dash = true)
  ^^^
app/helpers/application_helper.rb:115:39: W: Useless assignment to variable - [33me[0m.
  rescue ScoreComputationException => e
                                      ^
app/helpers/application_helper.rb:152:3: C: Cyclomatic complexity for external_javascript_include_tag is too high. [11/6]
  def external_javascript_include_tag(library, version)
  ^^^
app/helpers/application_helper.rb:152:3: C: Method has too many lines. [24/20]
  def external_javascript_include_tag(library, version)
  ^^^
app/helpers/application_helper.rb:168:101: C: Line is too long. [102/100]
      javascript_include_tag "#{cloudflare}/backbone-relational/#{version}/backbone-relational.min.js"
                                                                                                    ^^
app/helpers/assessment_helper.rb:1:1: C: Missing top-level module documentation comment.
module AssessmentHelper
^^^^^^
app/helpers/assessment_helper.rb:2:3: C: Assignment Branch Condition size for stats_table is too high. [19.92/15]
  def stats_table(data)
  ^^^
app/helpers/assessment_helper.rb:2:3: C: Method has too many lines. [27/20]
  def stats_table(data)
  ^^^
app/helpers/assessment_helper.rb:62:3: C: Assignment Branch Condition size for csv_row_for is too high. [29.02/15]
  def csv_row_for(asmt, cud, as_seen_by)
  ^^^
app/helpers/assessment_helper.rb:62:3: C: Cyclomatic complexity for csv_row_for is too high. [8/6]
  def csv_row_for(asmt, cud, as_seen_by)
  ^^^
app/helpers/assessment_helper.rb:62:3: C: Method has too many lines. [24/20]
  def csv_row_for(asmt, cud, as_seen_by)
  ^^^
app/helpers/assessment_helper.rb:62:3: C: Perceived complexity for csv_row_for is too high. [8/7]
  def csv_row_for(asmt, cud, as_seen_by)
  ^^^
app/helpers/assessment_helper.rb:85:5: W: [33mend[0m at 85, 4 is not aligned with [33mif[0m at 73, 18
    end
    ^^^
app/helpers/assessment_helper.rb:93:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when Symbol
      ^^^^
app/helpers/assessment_helper.rb:95:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when Float
      ^^^^
app/helpers/assessment_helper.rb:102:7: C: Use snake_case for method names.
  def bulkGrade_cell(cell)
      ^^^^^^^^^^^^^^
app/helpers/assessment_helper.rb:113:7: C: Use snake_case for method names.
  def bulkGrade_cell_class(cell)
      ^^^^^^^^^^^^^^^^^^^^
app/helpers/assessment_user_datum_helper.rb:1:1: C: Missing top-level module documentation comment.
module AssessmentUserDatumHelper
^^^^^^
app/helpers/assessment_user_datum_helper.rb:13:101: C: Line is too long. [111/100]
  # Due At in string form. If it is nil (meaning there is infinite extension), display appropriate information.
                                                                                                    ^^^^^^^^^^^
app/helpers/assessment_user_datum_helper.rb:18:101: C: Line is too long. [108/100]
  # End At string form. If it is nil (meaning there is infinite extension), display appropriate information.
                                                                                                    ^^^^^^^^
app/helpers/course_helper.rb:1:1: C: Missing top-level module documentation comment.
module CourseHelper
^^^^^^
app/helpers/extension_helper.rb:1:1: C: Missing top-level module documentation comment.
module ExtensionHelper
^^^^^^
app/helpers/gradebook_helper.rb:3:1: C: Missing top-level module documentation comment.
module GradebookHelper
^^^^^^
app/helpers/gradebook_helper.rb:4:3: C: Assignment Branch Condition size for gradebook_columns is too high. [17.15/15]
  def gradebook_columns(matrix, course)
  ^^^
app/helpers/gradebook_helper.rb:4:3: C: Method has too many lines. [35/20]
  def gradebook_columns(matrix, course)
  ^^^
app/helpers/gradebook_helper.rb:53:3: C: Assignment Branch Condition size for gradebook_rows is too high. [57.65/15]
  def gradebook_rows(matrix, course, section = nil, lecture = nil)
  ^^^
app/helpers/gradebook_helper.rb:53:3: C: Cyclomatic complexity for gradebook_rows is too high. [8/6]
  def gradebook_rows(matrix, course, section = nil, lecture = nil)
  ^^^
app/helpers/gradebook_helper.rb:53:3: C: Method has too many lines. [34/20]
  def gradebook_rows(matrix, course, section = nil, lecture = nil)
  ^^^
app/helpers/gradebook_helper.rb:53:3: C: Perceived complexity for gradebook_rows is too high. [8/7]
  def gradebook_rows(matrix, course, section = nil, lecture = nil)
  ^^^
app/helpers/gradebook_helper.rb:60:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if section
      ^^
app/helpers/gradebook_helper.rb:64:7: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      if lecture
      ^^
app/helpers/gradebook_helper.rb:126:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when Float
      ^^^^
app/helpers/gradebook_helper.rb:128:7: C: Indent [33mwhen[0m as deep as [33mcase[0m.
      when String
      ^^^^
app/helpers/gradebook_helper.rb:135:3: C: Assignment Branch Condition size for gradebook_csv is too high. [40.12/15]
  def gradebook_csv(matrix, course)
  ^^^
app/helpers/gradebook_helper.rb:143:101: C: Line is too long. [130/100]
        row = [cud.user.email, cud.user.first_name, cud.user.last_name, cud.lecture, cud.section, cud.school, cud.major, cud.year]
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/grading_helper.rb:1:1: C: Missing top-level module documentation comment.
module GradingHelper
^^^^^^
app/helpers/groups_helper.rb:1:1: C: Missing top-level module documentation comment.
module GroupsHelper
^^^^^^
app/helpers/home_helper.rb:1:1: C: Missing top-level module documentation comment.
module HomeHelper
^^^^^^
app/helpers/quick_grades_helper.rb:1:1: C: Missing top-level module documentation comment.
module QuickGradesHelper
^^^^^^
app/helpers/scheduler_helper.rb:1:1: C: Missing top-level module documentation comment.
module SchedulerHelper
^^^^^^
app/helpers/submission_helper.rb:1:1: C: Missing top-level module documentation comment.
module SubmissionHelper
^^^^^^
app/helpers/users_helper.rb:1:1: C: Missing top-level module documentation comment.
module UsersHelper
^^^^^^
app/mailers/course_mailer.rb:1:1: C: Missing top-level class documentation comment.
class CourseMailer < ActionMailer::Base
^^^^^
app/mailers/course_mailer.rb:13:26: C: Avoid parameter lists longer than 5 parameters.
  def course_announcement(sender, to, subject, text, cud, course)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:4:1: C: Class definition is too long. [279/100]
class Assessment < ActiveRecord::Base
^^^^^
app/models/assessment.rb:4:1: C: Missing top-level class documentation comment.
class Assessment < ActiveRecord::Base
^^^^^
app/models/assessment.rb:22:3: C: Prefer the new style validations [33mvalidates :column, uniqueness: value[0m over [33mvalidates_uniqueness_of[0m.
  validates_uniqueness_of :name, scope: :course_id
  ^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:23:3: C: Prefer the new style validations [33mvalidates :column, length: value[0m over [33mvalidates_length_of[0m.
  validates_length_of :display_name, minimum: 1
  ^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:27:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :max_size, :max_submissions
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:28:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :version_threshold, only_integer: true,
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:30:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :max_grace_days, only_integer: true,
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:32:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :group_size, only_integer: true, greater_than_or_equal_to: 1, allow_nil: true
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:32:101: C: Line is too long. [105/100]
  validates_numericality_of :group_size, only_integer: true, greater_than_or_equal_to: 1, allow_nil: true
                                                                                                    ^^^^^
app/models/assessment.rb:33:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :name, :display_name, :due_at, :end_at, :start_at,
  ^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:57:7: C: Use snake_case for method names.
  def create_AUDs_modulo_callbacks
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:163:3: C: Assignment Branch Condition size for construct_config_file is too high. [15.52/15]
  def construct_config_file
  ^^^
app/models/assessment.rb:170:101: C: Line is too long. [101/100]
    config = source_config.gsub "module #{source_config_module_name}", "module #{config_module_name}"
                                                                                                    ^
app/models/assessment.rb:191:5: W: The use of [33meval[0m is a serious security risk.
    eval config_module_name
    ^^^^
app/models/assessment.rb:240:7: C: Rename [33mhas_groups?[0m to [33mgroups?[0m.
  def has_groups?
      ^^^^^^^^^^^
app/models/assessment.rb:248:7: C: Use snake_case for method names.
  def grouplessCUDs
      ^^^^^^^^^^^^^
app/models/assessment.rb:249:101: C: Line is too long. [160/100]
    course.course_user_data.joins(:assessment_user_data).where(assessment_user_data: { assessment_id: id, membership_status: AssessmentUserDatum::UNCONFIRMED })
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:270:3: C: Replace class var @@CONFIG_FILE_LAST_LOADED with a class instance var.
  @@CONFIG_FILE_LAST_LOADED = {}
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:270:3: C: Use snake_case for variable names.
  @@CONFIG_FILE_LAST_LOADED = {}
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:304:101: C: Line is too long. [134/100]
    Submission.select("submissions.*").where("(version, course_user_datum_id) IN (#{max_version_subquery}) AND assessment_id = ?", id)
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:321:34: W: Ambiguous block operator. Parenthesize the method arguments if it's surely a block operator, or add a whitespace to the right of the [33m&[0m if it should be a binary AND.
    s["problems"] = problems.map &:serialize
                                 ^
app/models/assessment.rb:327:101: C: Line is too long. [222/100]
  GENERAL_SERIALIZABLE = Set.new %w(name display_name category_name description handin_filename handin_directory has_autograde has_svn has_scoreboard max_grace_days handout writeup max_submissions disable_handins max_size)
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/assessment.rb:334:5: W: Useless assignment to variable - [33mattributes[0m.
    attributes = s["general"] if s["general"]
    ^^^^^^^^^^
app/models/assessment.rb:335:5: W: Useless assignment to variable - [33mproblems[0m.
    problems = Problem.deserialize_list s["problems"] if s["problems"]
    ^^^^^^^^
app/models/assessment.rb:336:5: W: Useless assignment to variable - [33mautograding_setup[0m.
    autograding_setup = AutogradingSetup.deserialize s["autograding_setup"] if s["autograding_setup"]
    ^^^^^^^^^^^^^^^^^
app/models/assessment.rb:336:101: C: Line is too long. [101/100]
    autograding_setup = AutogradingSetup.deserialize s["autograding_setup"] if s["autograding_setup"]
                                                                                                    ^
app/models/assessment.rb:337:5: W: Useless assignment to variable - [33mscoreboard_setup[0m.
    scoreboard_setup = ScoreboardSetup.deserialize s["autograding_setup"] if s["scoreboard_setup"]
    ^^^^^^^^^^^^^^^^
app/models/assessment.rb:355:7: C: Rename [33mis_file?[0m to [33mfile?[0m.
  def is_file?(name)
      ^^^^^^^^
app/models/assessment.rb:389:101: C: Line is too long. [102/100]
          errors.add :handin_directory, "(#{dir}) could not be created, please do so manually. (#{e})"
                                                                                                    ^^
app/models/assessment_user_datum.rb:9:1: C: Class definition is too long. [217/100]
class AssessmentUserDatum < ActiveRecord::Base
^^^^^
app/models/attachment.rb:12:3: C: Assignment Branch Condition size for file= is too high. [15.68/15]
  def file=(upload)
  ^^^
app/models/course.rb:4:1: C: Class definition is too long. [138/100]
class Course < ActiveRecord::Base
^^^^^
app/models/course.rb:4:1: C: Missing top-level class documentation comment.
class Course < ActiveRecord::Base
^^^^^
app/models/course.rb:6:3: C: Prefer the new style validations [33mvalidates :column, uniqueness: value[0m over [33mvalidates_uniqueness_of[0m.
  validates_uniqueness_of :name
  ^^^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:7:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :display_name, :start_date, :end_date
  ^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:8:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :late_slack, :grace_days, :late_penalty, :version_penalty
  ^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:9:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :grace_days, greater_than_or_equal_to: 0
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:10:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :version_threshold, only_integer: true, greater_than_or_equal_to: -1
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:32:3: C: Assignment Branch Condition size for init_course_folder is too high. [19.24/15]
  def init_course_folder
  ^^^
app/models/course.rb:36:20: W: [33m(...)[0m interpreted as grouped expression.
    FileUtils.touch (File.join course_dir, "autolab.log")
                   ^
app/models/course.rb:42:22: W: [33m(...)[0m interpreted as grouped expression.
    FileUtils.mkdir_p (File.join Rails.root, "assessmentConfig")
                     ^
app/models/course.rb:43:22: W: [33m(...)[0m interpreted as grouped expression.
    FileUtils.mkdir_p (File.join Rails.root, "courseConfig")
                     ^
app/models/course.rb:44:22: W: [33m(...)[0m interpreted as grouped expression.
    FileUtils.mkdir_p (File.join Rails.root, "gradebooks")
                     ^
app/models/course.rb:73:3: C: Assignment Branch Condition size for reload_config_file is too high. [27.96/15]
  def reload_config_file
  ^^^
app/models/course.rb:73:3: C: Method has too many lines. [21/20]
  def reload_config_file
  ^^^
app/models/course.rb:85:5: C: Prefer [33meach[0m over [33mfor[0m.
    for line in lines do
    ^^^
app/models/course.rb:96:5: W: The use of [33meval[0m is a serious security risk.
    eval("Course#{course.camelize}")
    ^^^^
app/models/course.rb:106:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => @error
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:175:24: W: The use of [33meval[0m is a serious security risk.
      Class.new.extend eval(config_module_name)
                       ^^^^
app/models/course_logger.rb:1:1: C: Missing top-level class documentation comment.
class Logger
^^^^^
app/models/course_logger.rb:3:5: C: Use snake_case for variable names.
    strTime = time.strftime("%m/%d/%y %H:%M:%S")
    ^^^^^^^
app/models/course_logger.rb:8:1: C: Missing top-level class documentation comment.
class CourseLogger
^^^^^
app/models/course_logger.rb:13:7: C: Use snake_case for method names.
  def setCourse(course)
      ^^^^^^^^^
app/models/course_user_datum.rb:3:1: C: Class definition is too long. [200/100]
class CourseUserDatum < ActiveRecord::Base
^^^^^
app/models/course_user_datum.rb:3:1: C: Missing top-level class documentation comment.
class CourseUserDatum < ActiveRecord::Base
^^^^^
app/models/course_user_datum.rb:4:3: C: Missing top-level class documentation comment.
  class AuthenticationFailed < Exception
  ^^^^^
app/models/course_user_datum.rb:35:5: W: Useless assignment to variable - [33mconditions[0m.
    conditions = columns.map do|c|
    ^^^^^^^^^^
app/models/course_user_datum.rb:42:5: C: Prefer [33meach[0m over [33mfor[0m.
    for column in CourseUserDatum.content_columns
    ^^^
app/models/course_user_datum.rb:42:5: C: Use [33mnext[0m to skip iteration.
    for column in CourseUserDatum.content_columns
    ^^^
app/models/course_user_datum.rb:104:7: C: Use snake_case for method names.
  def CA_of?(student)
      ^^^^^^
app/models/course_user_datum.rb:118:7: C: Use snake_case for method names.
  def CA_only?
      ^^^^^^^^
app/models/course_user_datum.rb:137:3: C: Cyclomatic complexity for has_auth_level? is too high. [8/6]
  def has_auth_level?(level)
  ^^^
app/models/course_user_datum.rb:137:7: C: Rename [33mhas_auth_level?[0m to [33mauth_level?[0m.
  def has_auth_level?(level)
      ^^^^^^^^^^^^^^^
app/models/course_user_datum.rb:174:5: W: Useless assignment to variable - [33mcud[0m.
    cud = user.course_user_data.where(course: course).first
    ^^^
app/models/course_user_datum.rb:203:7: C: Use snake_case for method names.
  def create_AUDs_modulo_callbacks
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/course_user_datum.rb:234:5: W: [33mend[0m at 234, 4 is not aligned with [33mif[0m at 227, 14
    end
    ^^^
app/models/course_user_datum.rb:243:5: C: Redundant empty [33melse[0m-clause.
    else
    ^^^^
app/models/course_user_datum.rb:248:3: C: Assignment Branch Condition size for category_average_input is too high. [16.58/15]
  def category_average_input(category, as_seen_by)
  ^^^
app/models/course_user_datum.rb:253:5: W: Useless assignment to variable - [33muser_id[0m.
    user_id = id
    ^^^^^^^
app/models/course_user_datum.rb:263:3: C: Assignment Branch Condition size for average_input is too high. [17.46/15]
  def average_input(as_seen_by)
  ^^^
app/models/course_user_datum.rb:267:5: W: Useless assignment to variable - [33muser_id[0m.
    user_id = id
    ^^^^^^^
app/models/extension.rb:1:1: C: Missing top-level class documentation comment.
class Extension < ActiveRecord::Base
^^^^^
app/models/extension.rb:4:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :course_user_datum_id
  ^^^^^^^^^^^^^^^^^^^^^
app/models/extension.rb:6:3: C: Prefer the new style validations [33mvalidates :column, uniqueness: value[0m over [33mvalidates_uniqueness_of[0m.
  validates_uniqueness_of :course_user_datum_id, scope: :assessment_id,
  ^^^^^^^^^^^^^^^^^^^^^^^
app/models/extension.rb:13:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if days.blank? && !infinite?
    ^^
app/models/extension.rb:22:3: C: Assignment Branch Condition size for after_create is too high. [16.03/15]
  def after_create
  ^^^
app/models/grade_matrix.rb:1:1: C: Class definition is too long. [102/100]
class GradeMatrix
^^^^^
app/models/grade_matrix.rb:1:1: C: Missing top-level class documentation comment.
class GradeMatrix
^^^^^
app/models/grade_matrix.rb:12:41: W: Do not use prefix [33m_[0m for a variable that is used.
      AssociationCache.new(@course) do |_|
                                        ^
app/models/grade_matrix.rb:59:7: C: Rename [33mhas_assessment?[0m to [33massessment?[0m.
  def has_assessment?(asmt_id)
      ^^^^^^^^^^^^^^^
app/models/grade_matrix.rb:64:7: C: Rename [33mhas_cud?[0m to [33mcud?[0m.
  def has_cud?(cud_id)
      ^^^^^^^^
app/models/grade_matrix.rb:69:7: C: Rename [33mhas_category?[0m to [33mcategory?[0m.
  def has_category?(cat)
      ^^^^^^^^^^^^^
app/models/grade_matrix.rb:83:3: C: Assignment Branch Condition size for matrix! is too high. [32.08/15]
  def matrix!
  ^^^
app/models/grade_matrix.rb:83:3: C: Method has too many lines. [29/20]
  def matrix!
  ^^^
app/models/grade_matrix.rb:121:3: C: Assignment Branch Condition size for summarize is too high. [21.12/15]
  def summarize(aud)
  ^^^
app/models/group.rb:1:1: C: Missing top-level class documentation comment.
class Group < ActiveRecord::Base
^^^^^
app/models/group.rb:7:7: C: Rename [33mis_member[0m to [33mmember?[0m.
  def is_member(aud)
      ^^^^^^^^^
app/models/penalty.rb:1:1: C: Missing top-level class documentation comment.
class Penalty < ScoreAdjustment
^^^^^
app/models/penalty.rb:3:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :value, greater_than_or_equal_to: 0
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/problem.rb:1:1: C: Missing top-level class documentation comment.
class Problem < ActiveRecord::Base
^^^^^
app/models/problem.rb:9:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :name
  ^^^^^^^^^^^^^^^^^^^^^
app/models/problem.rb:18:18: W: Ambiguous block operator. Parenthesize the method arguments if it's surely a block operator, or add a whitespace to the right of the [33m&[0m if it should be a binary AND.
    problems.map &:deserialize
                 ^
app/models/scheduler.rb:1:1: C: Missing top-level class documentation comment.
class Scheduler < ActiveRecord::Base
^^^^^
app/models/scheduler.rb:6:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :interval
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/scheduler.rb:7:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :action
  ^^^^^^^^^^^^^^^^^^^^^
app/models/score.rb:1:1: C: Missing top-level class documentation comment.
class Score < ActiveRecord::Base
^^^^^
app/models/score.rb:9:101: C: Line is too long. [119/100]
  scope :on_latest_submissions, -> { where(submissions: { ignored: false }).joins(submission: :assessment_user_datum) }
                                                                                                    ^^^^^^^^^^^^^^^^^^^
app/models/score.rb:19:3: C: Prefer the new style validations [33mvalidates :column, uniqueness: value[0m over [33mvalidates_uniqueness_of[0m.
  validates_uniqueness_of(:problem_id, scope: :submission_id)
  ^^^^^^^^^^^^^^^^^^^^^^^
app/models/score.rb:20:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :grader_id
  ^^^^^^^^^^^^^^^^^^^^^
app/models/score.rb:38:3: C: Assignment Branch Condition size for log_entry is too high. [19.21/15]
  def log_entry
  ^^^
app/models/score.rb:45:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless submission.nil?
    ^^^^^^
app/models/score_adjustment.rb:1:1: C: Missing top-level class documentation comment.
class ScoreAdjustment < ActiveRecord::Base
^^^^^
app/models/score_adjustment.rb:4:3: C: Prefer the new style validations [33mvalidates :column, presence: value[0m over [33mvalidates_presence_of[0m.
  validates_presence_of :value, :kind
  ^^^^^^^^^^^^^^^^^^^^^
app/models/score_adjustment.rb:5:3: C: Prefer the new style validations [33mvalidates :column, numericality: value[0m over [33mvalidates_numericality_of[0m.
  validates_numericality_of :value
  ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/score_adjustment.rb:18:7: C: Provide an exception class and message as arguments to [33mfail[0m.
      fail ArgumentError.new("ScoreAdjustment.applied_value: score was nil")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/score_adjustment.rb:69:5: C: Favor [33mformat[0m over [33msprintf[0m.
    sprintf("%+g", value) + " " + type_str
    ^^^^^^^
app/models/scoreboard_setup.rb:1:1: C: Missing top-level class documentation comment.
class ScoreboardSetup < ActiveRecord::Base
^^^^^
app/models/scoreboard_setup.rb:18:3: C: Assignment Branch Condition size for col_spec is too high. [34.91/15]
  def col_spec
  ^^^
app/models/scoreboard_setup.rb:18:3: C: Cyclomatic complexity for col_spec is too high. [12/6]
  def col_spec
  ^^^
app/models/scoreboard_setup.rb:18:3: C: Method has too many lines. [35/20]
  def col_spec
  ^^^
app/models/scoreboard_setup.rb:18:3: C: Perceived complexity for col_spec is too high. [12/7]
  def col_spec
  ^^^
app/models/scoreboard_setup.rb:27:5: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
    rescue Exception => e
    ^^^^^^^^^^^^^^^^^^^^^
app/models/scoreboard_setup.rb:62:101: C: Line is too long. [112/100]
          errors.add "colspec", "'asc' key in col #{i} ignored because only the first three columns are sorted."
                                                                                                    ^^^^^^^^^^^^
app/models/submission.rb:7:1: C: Class definition is too long. [337/100]
class Submission < ActiveRecord::Base
^^^^^
app/models/submission.rb:72:3: C: Assignment Branch Condition size for save_file is too high. [46.7/15]
  def save_file(upload)
  ^^^
app/models/submission.rb:72:3: C: Cyclomatic complexity for save_file is too high. [8/6]
  def save_file(upload)
  ^^^
app/models/submission.rb:72:3: C: Method has too many lines. [26/20]
  def save_file(upload)
  ^^^
app/models/submission.rb:72:3: C: Perceived complexity for save_file is too high. [10/7]
  def save_file(upload)
  ^^^
app/models/submission.rb:108:3: C: Assignment Branch Condition size for archive_handin is too high. [16.61/15]
  def archive_handin
  ^^^
app/models/submission.rb:280:3: C: Assignment Branch Condition size for as_json is too high. [15.03/15]
  def as_json(options = {})
  ^^^
app/models/submission.rb:355:3: C: Assignment Branch Condition size for raw_score_input is too high. [15.43/15]
  def raw_score_input(include_unreleased)
  ^^^
app/models/submission.rb:424:3: C: Assignment Branch Condition size for allowed? is too high. [20.64/15]
  def allowed?
  ^^^
app/models/submission.rb:424:3: C: Cyclomatic complexity for allowed? is too high. [8/6]
  def allowed?
  ^^^
app/models/submission.rb:473:3: C: Assignment Branch Condition size for days_late! is too high. [23.87/15]
  def days_late!
  ^^^
app/models/tweak.rb:1:1: C: Missing top-level class documentation comment.
class Tweak < ScoreAdjustment
^^^^^
app/models/tweak.rb:12:7: C: Provide an exception class and message as arguments to [33mfail[0m.
      fail ArgumentError.new("ScoreAdjustment.apply_tweak: score was nil")
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:5:1: C: Class definition is too long. [198/100]
class User < ActiveRecord::Base
^^^^^
app/models/user.rb:63:3: C: Assignment Branch Condition size for ldap_reset is too high. [23.37/15]
  def ldap_reset
  ^^^
app/models/user.rb:100:3: C: Assignment Branch Condition size for new_with_session is too high. [35.26/15]
  def self.new_with_session(params, session)
  ^^^
app/models/user.rb:123:3: C: Assignment Branch Condition size for roster_create is too high. [19.26/15]
  def self.roster_create(email, first_name, last_name, school, major, year)
  ^^^
app/models/user.rb:123:3: C: Method has too many lines. [21/20]
  def self.roster_create(email, first_name, last_name, school, major, year)
  ^^^
app/models/user.rb:123:25: C: Avoid parameter lists longer than 5 parameters.
  def self.roster_create(email, first_name, last_name, school, major, year)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:179:3: C: Assignment Branch Condition size for ldap_lookup is too high. [52.11/15]
  def self.ldap_lookup(andrewID)
  ^^^
app/models/user.rb:179:3: C: Cyclomatic complexity for ldap_lookup is too high. [44/6]
  def self.ldap_lookup(andrewID)
  ^^^
app/models/user.rb:179:3: C: Method has too many lines. [65/20]
  def self.ldap_lookup(andrewID)
  ^^^
app/models/user.rb:179:3: C: Perceived complexity for ldap_lookup is too high. [15/7]
  def self.ldap_lookup(andrewID)
  ^^^
lib/__defaultAssessment.rb:5:3: E: class or module name must be a constant literal
  include AssessmentBase
  ^^^^^^^
lib/__defaultAssessment.rb:13:1: E: unexpected token kEND
end
^^^
lib/__defaultCourse.rb:1:1: C: Use snake_case for source file names.
#
^
lib/__defaultCourse.rb:36:5: C: Use snake_case for method names.
def fooAverage(_user)
    ^^^^^^^^^^
lib/__defaultCourse.rb:52:5: C: Use snake_case for method names.
def courseAverage(_user)
    ^^^^^^^^^^^^^
lib/__defaultCourse.rb:59:5: C: Use snake_case for method names.
def gradebookMessage
    ^^^^^^^^^^^^^^^^
lib/AssessmentBase.rb:1:1: C: Missing top-level module documentation comment.
module AssessmentBase
^^^^^^
lib/AssessmentBase.rb:1:1: C: Use snake_case for source file names.
module AssessmentBase
^
lib/association_cache.rb:1:1: C: Missing top-level class documentation comment.
class AssociationCache
^^^^^
lib/association_cache.rb:53:101: C: Line is too long. [111/100]
      @latest_submission_scores[score.submission_id] = [] unless @latest_submission_scores[score.submission_id]
                                                                                                    ^^^^^^^^^^^
lib/association_cache.rb:93:1: C: Missing top-level module documentation comment.
module CUDAssociationCache
^^^^^^
lib/association_cache.rb:109:1: C: Missing top-level module documentation comment.
module CourseAssociationCache
^^^^^^
lib/association_cache.rb:131:1: C: Missing top-level module documentation comment.
module AssessmentAssociationCache
^^^^^^
lib/association_cache.rb:159:1: C: Missing top-level module documentation comment.
module AUDAssociationCache
^^^^^^
lib/association_cache.rb:183:101: C: Line is too long. [121/100]
    @latest_submission = cache.latest_submissions[au_key assessment_id, course_user_datum_id] if cache.latest_submissions
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^
lib/association_cache.rb:187:1: C: Missing top-level module documentation comment.
module LatestSubmissionAssociationCache
^^^^^^
lib/association_cache.rb:211:3: C: Assignment Branch Condition size for association_cache= is too high. [19.1/15]
  def association_cache=(cache)
  ^^^
lib/CourseBase.rb:1:1: C: Use snake_case for source file names.
require "statistics.rb"
^
lib/CourseBase.rb:3:1: C: Missing top-level module documentation comment.
module CourseBase
^^^^^^
lib/CourseBase.rb:4:7: C: Use snake_case for method names.
  def courseAverage(user)
      ^^^^^^^^^^^^^
lib/CourseBase.rb:8:7: C: Use snake_case for method names.
  def gradebookMessage
      ^^^^^^^^^^^^^^^^
lib/module_base.rb:6:7: C: Use snake_case for method names.
  def updateModules
      ^^^^^^^^^^^^^
lib/module_base.rb:7:5: C: Use snake_case for variable names.
    @allModules = %w(Autograde Scoreboard Partners Svn)
    ^^^^^^^^^^^
lib/module_base.rb:8:5: C: Use snake_case for variable names.
    @modulesUsed = []
    ^^^^^^^^^^^^
lib/module_base.rb:10:5: C: Use snake_case for variable names.
    modName = (assign + (@course.name).gsub(/[^A-Za-z0-9]/, "")).camelize
    ^^^^^^^
lib/module_base.rb:12:5: C: Prefer [33meach[0m over [33mfor[0m.
    for mod in @allModules do
    ^^^
lib/module_base.rb:14:9: C: Use snake_case for variable names.
        modUsed = eval("#{modName}.include?(#{mod})")
        ^^^^^^^
lib/module_base.rb:14:19: W: The use of [33meval[0m is a serious security risk.
        modUsed = eval("#{modName}.include?(#{mod})")
                  ^^^^
lib/module_base.rb:15:9: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
        if modUsed
        ^^
lib/module_base.rb:18:7: W: Do not suppress exceptions.
      rescue Exception
      ^^^^^^^^^^^^^^^^
lib/module_base.rb:18:7: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
      rescue Exception
      ^^^^^^^^^^^^^^^^
lib/module_base.rb:25:7: C: Use snake_case for method names.
  def listAdmin
      ^^^^^^^^^
lib/module_base.rb:29:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @modulesUsed.include?("Autograde")
    ^^
lib/module_base.rb:33:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @modulesUsed.include?("Scoreboard")
    ^^
lib/module_base.rb:37:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @modulesUsed.include?("Partners")
    ^^
lib/module_base.rb:41:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if @modulesUsed.include?("Svn")
    ^^
lib/module_base.rb:41:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if @modulesUsed.include?("Svn")
    ^^
lib/module_base.rb:48:7: C: Use snake_case for method names.
  def loadHandinPage
      ^^^^^^^^^^^^^^
lib/module_base.rb:55:7: C: Use snake_case for method names.
  def validateHandin
      ^^^^^^^^^^^^^^
lib/module_base.rb:59:7: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      unless partnersValidateHandin
      ^^^^^^
lib/module_base.rb:66:7: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      unless svn_validate_handin
      ^^^^^^
lib/module_base.rb:70:7: C: Favor modifier [33munless[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
      unless super()
      ^^^^^^
lib/module_base.rb:79:7: C: Use snake_case for method names.
  def saveHandin
      ^^^^^^^^^^
lib/modules/Autograde.rb:1:1: C: Use snake_case for source file names.
##
^
lib/modules/Partners.rb:1:1: C: Use snake_case for source file names.
##
^
lib/modules/Scoreboard.rb:1:1: C: Use snake_case for source file names.
##
^
lib/modules/Svn.rb:1:1: C: Use snake_case for source file names.
##
^
lib/modules/Svn.rb:7:7: C: Use snake_case for method names.
  def checkoutWork(_repo, targetDir)
      ^^^^^^^^^^^^
lib/modules/Svn.rb:15:7: C: Use snake_case for variable names.
      testFile = File.join(targetDir, "test.txt")
      ^^^^^^^^
lib/modules/Svn.rb:29:7: C: Use snake_case for method names.
  def subversionType
      ^^^^^^^^^^^^^^
lib/statistics.rb:1:1: C: Missing top-level class documentation comment.
class Statistics
^^^^^
lib/statistics.rb:6:31: C: Name [33minject[0m block params [33m|a, e|[0m.
      result = (a.inject(0) { |sum, el| sum + el }.to_f) / a.to_a.length
                              ^^^^^^^^^
lib/statistics.rb:52:3: C: Assignment Branch Condition size for median is too high. [16.76/15]
  def median(a)
  ^^^
lib/statistics.rb:53:5: C: Favor modifier [33mif[0m usage when having a single-line body. Another good alternative is the usage of control flow [33m&&[0m/[33m||[0m.
    if a.nil? || a.empty?
    ^^
lib/utilities.rb:1:1: C: Missing top-level module documentation comment.
module Utilities
^^^^^^
lib/utilities.rb:8:12: C: Rename [33mis_url?[0m to [33murl?[0m.
  def self.is_url?(name)
           ^^^^^^^
lib/utilities.rb:19:3: W: Avoid rescuing the [33mException[0m class. Perhaps you meant to rescue [33mStandardError[0m?
  rescue Exception => e
  ^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:20:5: C: Provide an exception class and message as arguments to [33mraise[0m.
    raise InstructorException.new("Error executing #{invoked_method_name}: #{e}")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:23:3: C: Perceived complexity for validated_score_value is too high. [8/7]
  def self.validated_score_value(score, invoked_method_name, allow_nil = false)
  ^^^
lib/utilities.rb:27:19: C: Avoid using [33mrescue[0m in its modifier form.
      if (score = Float(score) rescue nil)
                  ^^^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:28:9: C: Provide an exception class and message as arguments to [33mfail[0m.
        fail InvalidComputedScoreException.new("#{message}: returned infinite number") unless score.finite?
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:28:101: C: Line is too long. [107/100]
        fail InvalidComputedScoreException.new("#{message}: returned infinite number") unless score.finite?
                                                                                                    ^^^^^^^
lib/utilities.rb:30:9: C: Provide an exception class and message as arguments to [33mfail[0m.
        fail InvalidComputedScoreException.new("#{message}: error converting to float")
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/utilities.rb:33:7: C: Provide an exception class and message as arguments to [33mfail[0m.
      fail InvalidComputedScoreException.new("#{message}: returned nil") unless allow_nil
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/factories/users.rb:4:13: W: [33m(...)[0m interpreted as grouped expression.
    sequence (:last_name) { |n| "User #{n}" }
            ^
spec/factories/users.rb:5:13: W: [33m(...)[0m interpreted as grouped expression.
    sequence (:email) { |n| "test#{n}@andrew.cmu.edu" }
            ^
spec/support/controller_macros.rb:3:1: C: Missing top-level module documentation comment.
module ControllerMacros
^^^^^^
spec/support/controller_macros.rb:4:7: C: Do not prefix reader method names with [33mget_[0m.
  def get_admin
      ^^^^^^^^^
spec/support/controller_macros.rb:9:7: C: Do not prefix reader method names with [33mget_[0m.
  def get_instructor
      ^^^^^^^^^^^^^^
spec/support/controller_macros.rb:10:5: C: Use snake_case for variable names.
    instructorCUDs = CourseUserDatum.where(instructor: true)
    ^^^^^^^^^^^^^^
spec/support/controller_macros.rb:14:7: C: Do not prefix reader method names with [33mget_[0m.
  def get_course_assistant
      ^^^^^^^^^^^^^^^^^^^^
spec/support/controller_macros.rb:15:5: C: Use snake_case for variable names.
    caCUDs = CourseUserDatum.where(course_assistant: true)
    ^^^^^^
spec/support/controller_macros.rb:19:7: C: Do not prefix reader method names with [33mget_[0m.
  def get_user
      ^^^^^^^^
templates/AutoPopulated-labtemplate.rb:1:1: C: Use snake_case for source file names.
require "AssessmentBase.rb"
^
templates/AutoPopulated-labtemplate.rb:4:1: C: Missing top-level module documentation comment.
module LabtemplateAutoPopulated
^^^^^^
templates/AutoPopulated-labtemplate.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^
templates/labtemplate/labtemplate.rb:4:1: C: Missing top-level module documentation comment.
module Labtemplate
^^^^^^
templates/labtemplate/labtemplate.rb:8:7: C: Use snake_case for method names.
  def assessmentInitialize(course)
      ^^^^^^^^^^^^^^^^^^^^

147 files inspected, 994 offenses detected
